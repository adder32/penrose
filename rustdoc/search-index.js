var searchIndex = JSON.parse('{\
"penrose":{"doc":"Penrose: a library for building your very own tiling â€¦","t":[3,13,4,13,13,13,13,13,13,13,13,13,13,2,2,13,2,6,2,2,2,13,13,13,13,13,2,13,13,13,13,13,2,11,11,11,11,11,0,11,11,0,14,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,14,11,11,0,11,11,11,11,14,11,14,11,11,11,11,11,11,11,11,11,11,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,5,0,5,5,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,0,11,11,11,11,11,11,12,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,6,3,3,3,3,0,11,11,0,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,12,11,11,12,11,12,11,11,11,11,12,12,11,11,11,11,11,0,11,0,11,11,11,11,0,12,11,11,11,12,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,13,13,13,13,13,13,6,3,6,6,8,4,13,13,13,13,4,3,13,6,4,3,8,4,3,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,12,12,11,11,11,11,11,11,11,11,11,5,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,8,8,8,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,8,6,2,2,10,11,11,11,10,11,11,10,11,11,11,11,11,0,10,11,11,0,8,3,11,11,11,11,11,11,11,11,11,8,10,11,11,11,11,11,10,11,0,0,0,13,4,13,13,11,11,11,11,11,5,5,5,11,11,5,11,11,11,5,11,5,11,11,11,2,2,2,2,2,0,0,0,0,17,17,5,5,5,5,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,13,13,13,4,11,11,11,11,11,0,0,11,11,11,11,11,5,5,11,11,11,11,11,5,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12,12,12,11,5,11,11,11,11,11,11,11,11,3,3,13,4,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,13,13,13,2,4,13,2,2,2,2,11,11,11,11,11,11,11,0,11,0,0,0,11,11,11,11,0,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,13,3,3,3,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,2,13,13,13,4,4,13,13,13,13,13,2,2,13,6,13,13,4,2,8,8,2,0,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,10,11,11,11,0,10,10,11,11,11,10,11,11,11,10,10,10,11,11,11,11,10,11,11,11,10,11,11,10,11,11,11,11,10,11,11,0,0,11,11,11,10,10,10,11,10,11,10,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,3,6,6,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,17,4,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,17,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,4,4,3,13,13,13,13,13,13,3,13,13,13,13,13,13,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,18,18,18,18,18,13,13,13,4,13,18,18,18,18,18,18,18,18,4,18,18,13,18,18,13,13,13,18,13,3,4,13,3,13,3,3,13,3,4,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Color","Custom","Error","InsufficientWorkspaces","InvalidClientMessage","InvalidHexColor","InvalidHints","InvalidPropertyData","InvalidUtf8","Io","NoScreens","NonUniqueTags","ParseInt","Point","Position","Randr","Rect","Result","Screen","Stack","StackSet","UnknownClient","UnknownKeyName","UnknownModifier","UnknownMouseButton","UnknownStateExtension","Workspace","X11rbConnect","X11rbConnection","X11rbReplyError","X11rbReplyOrIdError","X11rbX11Error","Xid","as_rgb_hex_string","borrow","borrow","borrow_mut","borrow_mut","builtin","clone","clone_into","core","custom_error","eq","extensions","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","into","into","macros","map","ne","new_from_hex","pure","rgb","rgb_u32","rgba","rgba_u32","simple_transformer","source","stack","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","util","x","x11rb","0","0","0","0","0","0","0","0","0","0","button","format","hex_code","id","n_screens","n_ws","name","name","prop","reason","tags","ty","type_id","actions","layout","exit","floating","log_current_state","float_all","float_focused","reposition","resize","sink_all","sink_focused","MainAndStack","Monocle","borrow","borrow","borrow_mut","borrow_mut","bottom","bottom_mirrored","bottom_unboxed","boxed","boxed_clone","boxed_clone","clone","clone","clone_into","clone_into","default","fmt","fmt","from","from","handle_message","handle_message","into","into","layout","layout","messages","name","name","side","side_mirrored","side_unboxed","to_owned","to_owned","transformers","try_from","try_from","try_into","try_into","type_id","type_id","0","ExpandMain","Hide","IncMain","Mirror","Rotate","ShrinkMain","ShutDown","UnwrapTransformer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Gaps","ReflectHorizontal","ReflectVertical","ReserveTop","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed_clone","boxed_clone","boxed_clone","boxed_clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","from","from","from","from","handle_message","handle_message","handle_message","handle_message","inner_mut","inner_mut","inner_mut","inner_mut","inner_px","into","into","into","into","layout","layout","layout","layout","layout","layout","layout_empty","layout_empty","layout_empty","layout_empty","layout_workspace","layout_workspace","layout_workspace","layout_workspace","name","name","name","name","outer_px","px","to_owned","to_owned","to_owned","to_owned","transform_initial","transform_initial","transform_positions","transform_positions","transform_positions","transformed_name","transformed_name","transformed_name","transformed_name","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wrap","wrap","wrap","wrap","ClientSet","ClientSpace","Config","State","WindowManager","Xid","actions","add_extension","add_extension","bindings","border_width","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_set","clone","clone_into","cmp","compose_or_set_event_hook","compose_or_set_manage_hook","compose_or_set_refresh_hook","compose_or_set_startup_hook","config","current_event","default","default","default_layouts","deref","eq","event_hook","extension","floating_classes","fmt","fmt","fmt","fmt","focus_follow_mouse","focused_border","from","from","from","from","from","handle","hash","hooks","into","into","into","into","layout","manage_hook","mapped_clients","ne","new","normal_border","partial_cmp","refresh_hook","remove_extension","root","run","startup_hook","state","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","workspace_names","broadcast_layout_message","key_handler","modify_with","send_layout_message","spawn","Alt","Backspace","Ctrl","Delete","Down","Escape","KeyBindings","KeyCode","KeyCodeMask","KeyCodeValue","KeyEventHandler","KeyPress","Left","Left","Meta","Middle","ModifierKey","ModifierKeyIter","Motion","MouseBindings","MouseButton","MouseEvent","MouseEventHandler","MouseEventKind","MouseState","PageDown","PageUp","Press","Release","Return","Right","Right","ScrollDown","ScrollUp","Shift","Tab","Up","Utf8","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","button","call","call","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","code","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_detail_and_state","hash","hash","hash","hash","hash","hash","id","ignoring_modifier","into","into","into","into","into","into","into","into","into_iter","iter","keycodes_from_xmodmap","kind","len","mask","mask","modifiers","ne","ne","ne","ne","new","new","next","next_back","nth","parse_keybindings_with_xmodmap","partial_cmp","rpt","size_hint","state","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wpt","0","ComposedEventHook","ComposedManageHook","ComposedStateHook","EventHook","ManageHook","StateHook","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","boxed","call","call","call","call","call","call","from","from","from","into","into","into","then","then","then","then_boxed","then_boxed","then_boxed","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","IntoMessage","Layout","LayoutStack","LayoutTransformer","Message","boxed_clone","boxed_clone","broadcast_message","default","handle_message","handle_message","handle_message","layout","layout","layout_empty","layout_empty","layout_workspace","layout_workspace","messages","name","name","run_and_replace","transformers","IntoMessage","Message","borrow","borrow_mut","downcast_ref","from","into","into_message","try_from","try_into","type_id","LayoutTransformer","inner_mut","passthrough_message","run_transform","swap_inner","transform_initial","transform_positions","transformed_name","unwrap","actions","hooks","util","Add","FullScreenAction","Remove","Toggle","borrow","borrow_mut","clone","clone_into","cmp","create_or_switch_to_workspace","dmenu_focus_client","dmenu_focus_tag","eq","fmt","focus_or_spawn","from","into","partial_cmp","set_fullscreen_state","to_owned","toggle_fullscreen","try_from","try_into","type_id","NamedScratchPad","SpawnOnStartup","ToggleNamedScratchPad","add_ewmh_hooks","add_named_scratchpads","ewmh","manage","named_scratchpads","startup","EWMH_SUPPORTED_ATOMS","WM_NAME","add_ewmh_hooks","event_hook","refresh_hook","startup_hook","0","DefaultTiled","FloatingCentered","FloatingFixed","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call","call","fmt","fmt","fmt","from","from","from","into","into","into","new","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","NSP_TAG","NamedScratchPad","ToggleNamedScratchPad","add_named_scratchpads","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone_into","eq","fmt","fmt","from","from","into","into","manage_hook","ne","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","SpawnOnStartup","borrow","borrow_mut","boxed","call","from","into","try_from","try_into","type_id","Critical","Low","Normal","NotifyLevel","borrow","borrow_mut","clone","clone_into","cmp","debug","dmenu","eq","fmt","from","hash","into","notify_send","notify_send_custom","partial_cmp","to_owned","try_from","try_into","type_id","update_monitors_via_xrandr","0","CurrentStateConfig","NotfyState","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","default","default","eq","fmt","fmt","focused_client","focused_screen","focused_tag","from","from","into","into","line_per_stat","n_clients","n_mapped_clients","ne","summarise_state","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","DMenu","DMenuConfig","Line","MenuMatch","NoMatch","UserInput","bg_color","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","fg_color","fmt","fmt","fmt","from","from","from","ignore_case","into","into","into","n_lines","new","password_input","run","selected_color","show_line_numbers","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","0","0","1","Above","Below","Left","Position","RelativePosition","Right","Screen","Stack","StackSet","Workspace","borrow","borrow_mut","clone","clone_into","eq","fmt","from","geometry","into","screen","stack","stack_set","to_owned","try_from","try_into","type_id","workspace","Point","Rect","RelativeRect","RelativeTo","applied_to","apply_as_rect","as_columns","as_rows","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","centered_in","clone","clone","clone","clone_into","clone_into","clone_into","contains","contains_point","corners","default","default","default","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","fullscreen","h","hash","hash","into","into","into","is_larger_than","midpoint","ne","ne","ne","new","new","new","relative_to","relative_to","relative_to","reposition","resize","scale_h","scale_w","split_at_height","split_at_width","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","w","x","x","y","y","Screen","borrow","borrow_mut","clone","clone_into","default","fmt","from","geometry","index","into","to_owned","try_from","try_into","type_id","workspace","After","Before","Focus","Head","IntoIter","Iter","IterMut","Position","Stack","Tail","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_message","clone","clone","clone_into","clone_into","contains","default","default","eq","eq","filter","flatten","fmt","fmt","fmt","fmt","fmt","fmt","focus_down","focus_head","focus_up","focused","from","from","from","from","from","from_filtered","handle_message","head","insert","insert_at","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","last","len","map","ne","new","next","next","next","remove","remove_focused","reverse","rotate_down","rotate_focus_to_head","rotate_up","run_and_replace","swap_down","swap_focus_and_head","swap_up","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from_iter","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unravel","StackSet","add_invisible_workspace","add_workspace","borrow","borrow_mut","clients","clone","clone_into","contains","contains_tag","current_client","current_screen","current_stack","current_tag","current_workspace","current_workspace_mut","default","drag_workspace_backward","drag_workspace_forward","float","fmt","focus_client","focus_down","focus_head","focus_screen","focus_tag","focus_up","from","has_floating_windows","hidden_workspace_clients","hidden_workspaces","hidden_workspaces_mut","insert","insert_at","into","kill_focused","modify","modify_occupied","move_client_to_current_tag","move_client_to_tag","move_focused_to_tag","next_layout","next_screen","on_screen_workspace_clients","on_screen_workspaces","ordered_tags","ordered_workspaces","previous_layout","previous_screen","pull_tag_to_screen","remove_client","remove_focused","rotate_down","rotate_focus_to_head","rotate_up","screens","screens_mut","sink","swap_down","swap_focus_and_head","swap_up","tag_for_client","tag_for_screen","tag_for_workspace_id","to_owned","toggle_tag","try_from","try_into","try_new","type_id","with","workspace","workspace_mut","workspaces","workspaces_mut","Workspace","borrow","borrow_mut","broadcast_message","clients","clone","clone_into","contains","default","fmt","focus","from","handle_message","id","into","is_empty","layout_name","new","next_layout","previous_layout","tag","to_owned","try_from","try_into","type_id","notify","spawn","spawn_for_output","spawn_for_output_with_args","spawn_with_args","Atom","BorderColor","BorderPx","CheckWin","ClientAttr","ClientConfig","ClientEventMask","ClientUnmapMask","InputOnly","InputOutput","Position","Prop","Query","RootEventMask","ScreenId","StackAbove","StackBelow","WinType","WindowAttributes","XConn","XConnExt","XEvent","atom","atom_name","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client_geometry","client_should_float","clone","clone","clone","clone_into","clone_into","clone_into","cursor_position","eq","eq","eq","event","existing_clients","flush","fmt","fmt","fmt","focus","from","from","from","get_prop","get_window_attributes","grab","hash","hash","hash","hide","intern_atom","into","into","into","kill","kill_focused","manage","map","modify_and_refresh","ne","ne","ne","next_event","position_client","position_clients","property","query","refresh","restack","reveal","root","screen_details","send_client_message","set_active_client","set_client_attributes","set_client_border_color","set_client_config","set_initial_properties","set_prop","set_wm_state","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unmanage","unmap","warp_pointer","warp_pointer_to_screen","warp_pointer_to_window","window_title","Conn","RustConn","XcbConn","atom_name","borrow","borrow_mut","client_geometry","connection","conversions","create_window","cursor_position","existing_clients","flush","fmt","focus","from","get_prop","get_window_attributes","grab","intern_atom","into","kill","map","new","new","next_event","root","screen_details","send_client_message","set_client_attributes","set_client_config","set_prop","set_wm_state","try_from","try_into","type_id","unmap","warp_pointer","0","0","0","0","0","0","AUTO_FLOAT_WINDOW_TYPES","Atom","Atom","AtomIter","Cardinal","Manager","NetActiveWindow","NetClientList","NetClientListStacking","NetCurrentDesktop","NetDesktopNames","NetDesktopViewport","NetNumberOfDesktops","NetSupported","NetSupportingWmCheck","NetSystemTrayOpcode","NetSystemTrayOrientation","NetSystemTrayOrientationHorz","NetSystemTrayS0","NetWindowTypeCombo","NetWindowTypeDesktop","NetWindowTypeDialog","NetWindowTypeDnd","NetWindowTypeDock","NetWindowTypeDropdownMenu","NetWindowTypeMenu","NetWindowTypeNormal","NetWindowTypeNotification","NetWindowTypePopupMenu","NetWindowTypeSplash","NetWindowTypeToolbar","NetWindowTypeUtility","NetWmDesktop","NetWmName","NetWmState","NetWmStateDemandsAttention","NetWmStateFullscreen","NetWmStateHidden","NetWmStrut","NetWmWindowType","UNMANAGED_WINDOW_TYPES","UTF8String","Window","WmClass","WmDeleteWindow","WmHints","WmName","WmNormalHints","WmProtocols","WmState","WmTakeFocus","WmTransientFor","XEmbed","XEmbedInfo","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","from","from","from_str","hash","into","into","into_iter","iter","len","next","next_back","nth","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id","ClientEventMask","ClientMessage","ClientMessage","ClientMessageData","ClientMessageKind","ConfigureEvent","ConfigureNotify","ConfigureRequest","DeleteWindow","Destroy","Enter","Expose","ExposeEvent","FocusIn","KeyPress","Leave","MapRequest","MappingNotify","MouseEvent","NoEventMask","PointerChange","PropertyEvent","PropertyNotify","RandrNotify","ScreenChange","StructureNotify","SubstructureNotify","TakeFocus","TakeSystrayOwnership","U16","U32","U8","UnmapNotify","XEmbedFocusIn","XEmbedModalityOn","XEmbedNotify","XEmbedWindowActivate","XEvent","abs","as_message","as_u16","as_u32","as_u8","as_usize","atom","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","data","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","id","id","id","into","into","into","into","into","into","into","into","into","is_root","is_root","mask","ne","ne","ne","ne","ne","ne","ne","ne","new","r","r","relative","same_screen","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","0","0","0","0","0","0","1","1","1","1","1","0","0","0","0","0","0","0","0","0","0","0","0","0","Atom","Bytes","Cardinal","CopyFromParent","ICON_MASK_HINT","ICON_PIXMAP_HINT","ICON_POSITION_HINT","ICON_WINDOW_HINT","INPUT_HINT","Iconic","InputOnly","InputOutput","MapState","Normal","P_ASPECT","P_BASE_SIZE","P_MAX_SIZE","P_MIN_SIZE","P_POSITION","P_RESIZE_INC","P_SIZE","P_WIN_GRAVITY","Prop","STATE_HINT","URGENCY_HINT","UTF8String","U_POSITION","U_SIZE","UnViewable","Unmapped","Viewable","WINDOW_GROUP_HINT","Window","WindowAttributes","WindowClass","Withdrawn","WmHints","WmHints","WmHintsFlags","WmNormalHints","WmNormalHints","WmNormalHintsFlags","WmState","accepts_input","all","all","apply_to","base","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","default","default","difference","difference","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","extend","extend","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","hash","icon_mask","icon_pixmap","icon_position","icon_win","initial_state","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","into","into","is_all","is_all","is_empty","is_empty","max","min","ne","ne","ne","ne","ne","ne","new","new","new","not","not","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_bytes","try_from_bytes","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","user_specified","window_group","0","0","0","0","0","0","0","0","0","0","0","1","AppName","ClassName","Query","StringProperty","Title","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","run","run","run","run","run","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["penrose","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::Error","","","","","","","","","","","","","","","","","","","","","","","penrose::builtin","","penrose::builtin::actions","","","penrose::builtin::actions::floating","","","","","","penrose::builtin::layout","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::builtin::layout::messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::builtin::layout::transformers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::core::actions","","","","","penrose::core::bindingspenrose::core::bindings::KeyPress","penrose::core::hooks","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::core::layout","","","","","","","","","","","","","","","","","","","","","","","penrose::core::layout::messages","","","","","","","","","","","penrose::core::layout::transformers","","","","","","","","","penrose::extensions","","","penrose::extensions::actions","","","","","","","","","","","","","","","","","","","","","","","","penrose::extensions::hooks","","","","","","","","","penrose::extensions::hooks::ewmh","","","","","","penrose::extensions::hooks::manage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::extensions::hooks::named_scratchpads","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::extensions::hooks::startup","","","","","","","","","","penrose::extensions::util","","","","","","","","","","","","","","","","","","","","","","","","penrose::extensions::util::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::extensions::util::dmenu","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::extensions::util::dmenu::MenuMatch","","","penrose::pure","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::pure::geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::pure::screen","","","","","","","","","","","","","","","","penrose::pure::stack","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::pure::stack_set","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::pure::workspace","","","","","","","","","","","","","","","","","","","","","","","","","penrose::util","","","","","penrose::x","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::x11rb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::x::ClientAttr","penrose::x::ClientConfig","","","","penrose::x::WinType","penrose::x::atom","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::x::eventpenrose::x::event::ClientMessageData","","","penrose::x::event::ClientMessageKind","","","","","","","","","","","","penrose::x::event::XEvent","","","","","","","","","","","","","penrose::x::property","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose::x::property::Prop","","","","","","","penrose::x::query","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A simple RGBA based color","A custom error message from user code or extensions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Render this color as a #RRGGBB hew color string","","","","","Built-in functionality for penrose.","","","Core data structures and user facing functionality for the â€¦","Quickly create a [penrose::Error::Custom]","","Extensions to the base behaviour of Penrose","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Utility macros","Make creating a pre-defined HashMap a little less verbose","","Create a new Color from a hex encoded u32: 0xRRGGBB or â€¦","Side effect free management of internal window manager â€¦","The RGB information of this color as 0.0-1.0 range floats â€¦","0xRRGGBB representation of this Color (no alpha â€¦","The RGBA information of this color as 0.0-1.0 range floats â€¦","0xRRGGBBAA representation of this Color","Quickly define a LayoutTransformer from a single element â€¦","","Create a Stack containing the arguments. The only required â€¦","","","","","","","","","","","Utility functions for use in other parts of penrose","","Helpers and utilities for using x11rb as a back end for â€¦","","","","","","","","","","","","","","","","","","","","","","","","Helpers and pre-defined actions for use in user defined â€¦","Built-in layouts.","Exit penrose","Actions for manipulating floating windows.","Info log the current window manager State for debugging â€¦","Float all windows in their current tiled position","Move the currently focused windo to the floating layer in â€¦","Move a currently floating window by a given (x, y) delta","Resize a currently floating window by a given (width, â€¦","Sink all floating windows back into their tiled positions","Sink the current window back into tiling mode if it was â€¦","A simple Layout with main and secondary regions.","A simple monolce layout that gives the maximum available â€¦","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Built-in layout messages.","","","","","","","","Built-in layout transformers.","","","","","","","","Expand the size of the main area of the [Layout].","A [Message] sent when a [Layout] is no longer visible â€¦","Alter the number of clients contained in the main area of â€¦","Mirror the [Layout] over either the horizontal or vertical â€¦","Rotate the [Layout] to a new orientation","Shrink the size of the main area of the [Layout]","A [Message] sent when Penrose is shutting down or â€¦","Unwrap a [LayoutTransformer] to return the underlying [â€¦","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Simple gaps around the window placement of the enclosed â€¦","","","Reserve <code>px</code> pixels at the top of the screen.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The pure client state information for the window manager","The pure client state information for a single Workspace","","Mutable internal state for the window manager","A top level struct holding all of the state required to â€¦","An X11 ID for a given resource","Helpers for writing user defined key bindings.","Add a typed State extension to this WindowManager.","Add a typed State extension to this State.","Setting up and responding to user defined key/mouse â€¦","","","","","","","","","","","","","","","","","","","The event currently being processed.","","","","","","","Get access to a shared state extension.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","XEvent handlers for use in the main event loop;","","Traits for writing and composing hooks","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Layouts for positioning client windows on the screen â€¦","","The set of all client windows currently mapped to a screen.","","Construct a new WindowManager with the provided config and â€¦","","","","Remove a shared state extension entirely.","The Xid of the root window for the running WindowManager.","Start the WindowManager and run it until told to exit.","","","","","","","","","","","","","","","","","","Send a message to all layouts available to the current â€¦","Construct a KeyEventHandler from a closure or free function","Mutate the ClientSet and refresh the onscreen state","Send a message to the currently active layout","Spawn an external program as part of a key binding","Alt","Backspace","Control","Delete","Down","Escape","User defined key bindings","A key press and held modifiers","A u16 X key-code bitmask","A u8 X key-code enum value","Some action to be run by a user key binding","Abstraction layer for working with key presses","Left","1","Meta / super / windows","2","Known modifier keys for bindings","An iterator over the variants of Self","The mouse was moved while a button was held","User defined mouse bindings","Known mouse buttons for binding actions","A mouse movement or button event","An action to be run in response to a mouse event","The types of mouse events represented by a MouseEvent","A mouse state specification indicating the button and â€¦","PageDown","PageUp","A button was pressed","A button was released","Return / enter key","Right","3","5","4","Shift","Tab","Up","A raw character key","","","","","","","","","","","","","","","","","The xcb button ID for this MouseState","The MouseButton being held","","","","","","","","","","","","","","","","","","","","The key code that was held","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","The ID of the window that was contained the click","Create a new KeyCode from this one that removes the given â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Run the xmodmap command to dump the system keymap table.","Was this press, release or motion?","","The xcb bitmask for this MouseState","The held modifier mask","All ModifierKeys being held","","","","","Construct a new MouseState","Construct a new MouseEvent from raw data","","","","Parse string format key bindings into KeyCode based â€¦","","Absolute coordinate of the event","","The modifier and button code that was received","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Coordinate of the event relative to top-left of the window â€¦","","","","","Handle an XEvent, return <code>true</code> if default event handling â€¦","Action to run when a new client becomes managed.","An arbitrary action that can be run and modify State","","","","","","","Convert to a trait object","Convert to a trait object","Convert to a trait object","Run this hook","Run this hook","Run this hook","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Compose this hook with another EventHook. The second hook â€¦","Compose this hook with another ManageHook.","Compose this hook with another StateHook.","Compose this hook with a boxed EventHook. The second hook â€¦","Compose this hook with a boxed ManageHook.","Compose this hook with a boxed StateHook.","","","","","","","","","","","A Layout is responsible for positioning a Stack of clients â€¦","A stack of Layout options for use on a particular [â€¦","","","Provide a clone of this Layout wrapped as a trait object. â€¦","","Send the given Message to every Layout in this stack â€¦","","Process a dynamic Message.","Send the given Message to the currently active Layout.","","Generate screen positions for clients from a given Stack.","","Generate screen positions for an empty Stack.","","Generate screen positions for clients on a given [Workspaceâ€¦","","","A short display name for this Layout, appropriate for â€¦","","","","Marker trait for a type that can be sent as a Message","A dynamically typed message to be sent to a [Layout] for â€¦","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","A wrapper round another Layout that is able to intercept â€¦","Provide a mutable reference to the Layout wrapped by this â€¦","Pass a message on to the wrapped inner Layout.","Apply the LayoutTransformer to its wrapped inner Layout.","Replace the currently wrapped Layout with a new one.","Modify the initial Rect that will be passed to the inner â€¦","Optionally modify any of the positions returned by the â€¦","The same as Layout::name but for LayoutTransformer itself.","Remove the inner Layout from this LayoutTransformer.","Helpers and pre-defined actions for use in user defined â€¦","Hook implementations and helpers for adding to your â€¦","Utility extensions for use in the penrose window manager","","","","","","","","","","Jump to, or create, a [Workspace]","Use DMenu to dynamically select and focus a client window.","Use DMenu to dynamically select and focus a client window.","","","Focus a client with the given class as <code>WM_CLASS</code> or spawn â€¦","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Set the fullscreen state of a particular client","","Toggle the fullscreen state of the currently focused â€¦","","","","","","","","","EWMH compliance for Penrose","Manage hooks for common manage actions","Support for managing multiple floating scratchpad programs â€¦","Startup hooks for direct adding to your penrose config.","The set of Atoms this extension adds support for.","The WM_NAME that will be set for the X server","Add the required hooks to manage EWMH compliance to an â€¦","Intercept messages from external applications and handle â€¦","Notify external clients of the current status of â€¦","Advertise EWMH support to the X server","","Perform no additional actions when managing a new client.","Float clients in the center of the screen.","Float clients at a fixed position on the screen.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new FloatingCentered with the given width and â€¦","","","","","","","","","","The tag used for a placeholder Workspace that holds â€¦","A toggle-able client program that can be shown and hidden â€¦","Toggle the visibility of a NamedScratchPad.","Add the required hooks to manage EWMH compliance to an â€¦","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Store clients matching NamedScratchPad queries and run the â€¦","","","","","","","","","","Spawn a client program on window manager startup","","","Create a new startup hook ready for adding to your Config","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","A notification level when calling notify-send","","","","","","Debugging utilities for diagnosing issues with penrose.","A simple wrapper for sucklessâ€™ dmenu tool for providing â€¦","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Send a notification using the <code>notify-send</code> command line â€¦","Send a notification using the <code>notify-send</code> command line â€¦","","","","","","Detect the current monitor set up and arrange the monitors â€¦","","All fields default to true","Use <code>notify-send</code> to display details about the current â€¦","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Summarise the current state of the window manager as â€¦","","","","","","","","","A wrapper around the suckless dmenu program for creating â€¦","Config for running a DMenu selection","The selected line along its line number (0 indexed)","The result of attempting to match against user input in a â€¦","The user exited out of matching or had nothing typed","Nothing matched and this was the userâ€™s input when they â€¦","Background color for the rendered window","","","","","","","","","","","","","","Foreground color for text","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Should dmenu ignore case in the user input when matching?","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Number of lines to display at a time.","Create a new DMenu command which can be triggered and â€¦","Should dmenu treat the input as a password and render â€¦","Run this DMenu command and return the selected choice.","Selected line background color","Should line numbers be displayed to the user?","","","","","","","","","","","","","","","","Above the current position","Below the current position","Left of the current position","","A relative position along the horizontal and vertical axes","Right of the current position","","","","","","","","","","","Returns the argument unchanged.","Geometry primitives","Calls <code>U::from(self)</code>.","","","","","","","","","An x,y coordinate pair","An X window / screen position: top left corner + extent","An X window / screen position: top left corner + extent as â€¦","","Apply the proportions of this RelativeRect to a given Rect.","","Split this <code>Rect</code> into evenly sized columns.","Split this <code>Rect</code> into evenly sized rows.","","","","","","","Center this Rect inside of <code>enclosing</code>.","","","","","","","Check whether this Rect contains <code>other</code> as a sub-Rect","Check whether this Rect contains <code>p</code>","The four corners of this Rect in Point form returned in â€¦","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","All available space within a given Rect","The height of this rect","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether this Rect is physically larger than <code>other</code> â€¦","The midpoint of this rectangle","","","","Create a new Point.","Create a new RelativeRect from the provided values.","Create a new Rect.","","","","","","Create a new Rect with height equal to <code>factor</code> x <code>self.h</code>","Create a new Rect with width equal to <code>factor</code> x <code>self.w</code>","Divides this rect into two rows where the first has the â€¦","Divides this rect into two columns where the first has the â€¦","","","","","","","","","","","","","The width of this rect","An absolute x coordinate relative to the root window","The x-coordinate of the top left corner of this rect","An absolute y coordinate relative to the root window","The y-coordinate of the top left corner of this rect","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","Below the current focus point","Above the current focus point","The current focus point","The first element of the stack","","","","A position within a Stack.","A Stack can be thought of as a LinkedList with a hole â€¦","The last element of the stack","","","","","","","","","","","Send the given Message to every Layout in this stack â€¦","","","","","Check whether a given element is in this Stack","","","","","Retain only elements which satisfy the given predicate. If â€¦","Flatten a Stack into a Vector, losing the information of â€¦","","","","","","","Move focus from the current element down the stack, â€¦","Move focus to the element in the head position","Move focus from the current element up the stack, wrapping â€¦","Return a reference to the focused element in this Stack","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Attempt to create a new Stack from this one by filtering â€¦","Send the given Message to the currently active Layout.","Return a reference to the first element in this Stack","Insert the given element in place of the current focus, â€¦","Insert the given element at the requested position in the â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Always false: a Stack always has at least one focused â€¦","Provide an iterator over this stack iterating over up, â€¦","Provide an iterator over this stack iterating over up, â€¦","Return a reference to the last element in this Stack","The number of elements in this Stack.","Map a function over all elements in this Stack, returning â€¦","","Create a new Stack specifying the focused element and and â€¦","","","","Remove an element from the stack.","Remove the focused element of this Stack. If this was the â€¦","Reverse the ordering of a Stack (up becomes down) while â€¦","Rotate all elements of the stack back, wrapping from â€¦","Rotate the Stack until the current focused element is in â€¦","Rotate all elements of the stack forward, wrapping from â€¦","","Swap the focused element with the one below, wrapping from â€¦","Swap the current head element with the focused element in â€¦","Swap the focused element with the one above, wrapping from â€¦","","","","","","","","","For an iterator of at least one element, the first element â€¦","","","","","","","","","","","Iterate over the clients in this stack from the the â€¦","The side-effect free internal state representation of the â€¦","Add a new invisible Workspace to this StackSet.","Add a new Workspace to this StackSet.","","","Iterate over each client in this StackSet in an arbitrary â€¦","","","Returns <code>true</code> if the StackSet contains an element equal to â€¦","","Extract a reference to the focused element of the current â€¦","","Get a reference to the current Stack if there is one","The <code>tag</code> of the current Workspace","Get a reference to the current Workspace","Get a mutable reference to the current Workspace","","","","Record a known client as floating, giving its preferred â€¦","","Focus the given client and set its Workspace as current â€¦","Move focus from the current element down the Stack, â€¦","Move focus to the element in the head position. This is a â€¦","Set focus to the Screen with the specified index.","Set focus to the Workspace with the specified tag.","Move focus from the current element up the Stack, wrapping â€¦","Returns the argument unchanged.","Check whether a given tag currently has any floating â€¦","Iterate over clients from workspaces not currently mapped â€¦","Iterate over the currently hidden Workspace in this â€¦","Iterate over the currently hidden Workspace in this â€¦","Insert the given client to the current Stack in a default â€¦","Insert the given client to the current Stack at the â€¦","Calls <code>U::from(self)</code>.","Delete the currently focused client from this stack if â€¦","Apply a function to modify the current Stack if there is â€¦","Apply a function to modify the current Stack if it is â€¦","Move the given client to the focused position of the â€¦","Move the given client to the focused position of the â€¦","Move the focused client of the current Workspace to the â€¦","Switch to the next available Layout on the focused â€¦","Move focus to the next Screen","Iterate over clients present in on-screen Workspaces.","Iterate over the Workspace currently displayed on a screen â€¦","All Workspace tags in this StackSet order by their id that â€¦","All Workspaces in this StackSet order by their id that â€¦","Switch to the previous available Layout on the focused â€¦","Move focus to the previous Screen","Focus the requested tag on the current screen, swapping â€¦","Delete a client from this StackSet.","Delete the currently focused client from this stack if â€¦","Rotate all elements of the stack back, wrapping from â€¦","Rotate the Stack until the current focused element is in â€¦","Rotate all elements of the stack forward, wrapping from â€¦","Iterate over each Screen in this StackSet in an arbitrary â€¦","Mutably iterate over each Screen in this StackSet in an â€¦","Clear the floating status of a client, returning its â€¦","Swap the position of the focused element with one below it.","Swap the current head element with the focused element in â€¦","Swap the position of the focused element with one above it.","Find the tag of the Workspace containing a given client. â€¦","Find the tag of the Workspace currently displayed on Screenâ€¦","Find the tag of the Workspace with the given NetWmDesktop â€¦","","Toggle focus back to the previously focused Workspace â€¦","","","Create a new StackSet of empty stacks with the given â€¦","","If the current Stack is None, return <code>default</code> otherwise â€¦","A reference to the Workspace with a tag of <code>tag</code> if there is â€¦","A mutable reference to the Workspace with a tag of <code>tag</code> if â€¦","Iterate over each Workspace in this StackSet in an â€¦","Mutably iterate over each Workspace in this StackSet in an â€¦","","","","","","","","","","","","Returns the argument unchanged.","","A fixed integer ID for this workspace.","Calls <code>U::from(self)</code>.","Whether or not this workspace currently holds any windows","The name of the currently active layout being used by this â€¦","Create a new Workspace with the given layouts and stack.","","","The string tag for this workspace.","","","","","Use <code>notify-send</code> to display a message to the user","Run an external command","Run an external command and return its output.","Run an external command with arguments and return its â€¦","Run an external command with the specified command line â€¦","","Border color as an argb hex value","The border width in pixels","A simple hidden stub window for facilitating other API â€¦","Attributes for an X11 client window (not all are curently â€¦","On screen configuration options for X clients (not all are â€¦","Set the pre-defined client event mask","Set the pre-defined client event mask for sending unmap â€¦","A window that receives input only (not queryable)","A regular window. The Atom passed should be a valid _â€¦","Absolute size and position on the screen as a Rect","","","Set the pre-defined root event mask","","Mark this window as stacking on top of its peers","Mark this window as stacking below the given Xid","A window type to be specified when creating a new window â€¦","","","","","Data types for working with X atoms","","","","","","","","","","","","","","","","","","","","Data types for working with X events","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Hide a client by unmapping it and setting its WmState to â€¦","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Kill the focused client if there is one","","","Apply a pure function that modifies a ClientSet and then â€¦","","","","","","","Data types for working with X window properties","Queries against client windows","","Restack the given windows in, each one above the last.","Display a client on the screen by mapping it and setting â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handles communication with an X server via the x11rb crate.","","","","","","","Get a handle to the underlying connection.","Conversions to Penrose types from X11rb types","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","Construct an X11rbConnection  backed by the x11rb backend â€¦","Construct an X11rbConnection  backed by the x11rb backend â€¦","","","","","","","","","","","","","","","","","","","","Clients with one of these window types will be auto floated","A Penrose internal representation of X atoms.","ATOM","An iterator over the variants of Self","ATOM_CARDINAL","MANAGER","_NET_ACTIVE_WINDOW","_NET_CLIENT_LIST","_NET_CLIENT_LIST","_NET_CURRENT_DESKTOP","_NET_DESKTOP_NAMES","_NET_DESKTOP_VIEWPORT","_NET_NUMBER_OF_DESKTOPS","_NET_SUPPORTED","_NET_SUPPORTING_WM_CHECK","_NET_SYSTEM_TRAY_OPCODE","_NET_SYSTEM_TRAY_ORIENTATION","_NET_SYSTEM_TRAY_ORIENTATION_HORZ","_NET_SYSTEM_TRAY_S0","_NET_WM_WINDOW_TYPE_COMBO","_NET_WM_WINDOW_TYPE_DESKTOP","_NET_WM_WINDOW_TYPE_DIALOG","_NET_WM_WINDOW_TYPE_DND","_NET_WM_WINDOW_TYPE_DOCK","_NET_WM_WINDOW_TYPE_DROPDOWN_MENU","_NET_WM_WINDOW_TYPE_MENU","_NET_WM_WINDOW_TYPE_NORMAL","_NET_WM_WINDOW_TYPE_NOTIFICATION","_NET_WM_WINDOW_TYPE_POPUP_MENU","_NET_WM_WINDOW_TYPE_SPLASH","_NET_WM_WINDOW_TYPE_TOOLBAR","_NET_WM_WINDOW_TYPE_UTILITY","_NET_WM_DESKTOP","_NET_WM_NAME","_NET_WM_STATE","_NET_WM_STATE_DEMANDS_ATTENTION","_NET_WM_STATE_FULLSCREEN","_NET_WM_STATE_HIDDEN","_NET_WM_STRUT","_NET_WM_WINDOW_TYPE","Windows with a type in this array will not be managed by â€¦","UTF8_STRING","ATOM_WINDOW","WM_CLASS","WM_DELETE_WINDOW","WM_HINTS","WM_NAME","WM_NORMAL_HINTS","WM_PROTOCOLS","WM_STATE","WM_TAKE_FOCUS","WM_TRANSIENT_FOR","_XEMBED","_XEMBED_INFO","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Event masks used when sending client events","A client message that needs to be parsed and handled based â€¦","A message has been sent to a particular client","The raw data contained in a <code>ClientMessage</code>","Known common client message formats.","A configure request or notification when a client changes â€¦","Client config has changed in some way","A client is requesting to be repositioned","Inform a client that it is being closed","A client window has been closed","The mouse pointer has entered a new client window","A part or all of a client has become visible","A notification that a window has become visible","A client should have focus","A grabbed key combination has been entered by the user","The mouse pointer has left the current client window","A client window is requesting to be positioned and â€¦","Keybindings have changed","The mouse has moved or a mouse button has been pressed","No Mask: all clients should accept","A notification that the mouse pointer has entered or left â€¦","A property change on a known client","A client property has changed in some way","A randr action has occured (new outputs, resolution change â€¦","Focus has moved to a different screen","Structure Notify","Substructure Notify","Request that a client take input focus","Take ownership of the systray","Slice of u16","Slice of u32","Slice of u8","A client is being unmapped","Inform an embedded window that it has gained focus","Inform an embedded window that it has been blocked by a â€¦","Inform a window that it is being embedded","Inform an embedded window that it is now active","Wrapper around the low level X event types that correspond â€¦","Absolute coordinate of the event","Build a default ClientMessage compatible with X11 / XCB â€¦","Convert this client message into a single data format","Convert this client message into a single data format","Convert this client message into a single data format","Convert this client message into a single data format","The property that changed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","How many following expose events are pending","The raw data being sent in this message","The data type being set","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","The ID of the window that sent the message","The ID of the window that had a property changed","The ID of the window that has become exposed","The ID of the window that was entered","The ID of the window that had a property changed","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is this window the root window?","Is this window the root window?","The mask to use when sending the event","","","","","","","","","Try to build a new ClientMessage. Fails if the data is â€¦","The new window size","The current size and position of the window","Coordinate of the event relative to top-left of the window â€¦","Whether or not the event window is on the same screen as â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","One or more X Atoms","Raw bytes for when the prop type is non-standard","A cardinal number","Class is copied from parent window","Icon mask hint is set","Icon pixmap hint is set","Icon position hint is set","Icon window hint is set","Input hint is set","Window is iconified","Window can only be used for queries","Window can be displayed","The mapping states a window can be in","Window is visible","Program-specified min and max aspect ratios","Program-specified base size","Program-specified maximum size","Program-specified minimum size","Program-specified position","Program-specified resize increments","Program-specified size","Program-specified window gravity","Know property types that should be returnable by XConn â€¦","State hint is set","Urgency hint is set","UTF-8 encoded string data","User-specified x, y","User-specified width, height","The window is never viewable","The window is unmapped","The window is currently viewable","Window group hint is set","An X window IDs","Window Attributes honoured by penose.","The input class for a window","Window is not visible","Client requested hints about information other than window â€¦","The WmHints properties for this window","Possible flags that can be set in a WmHints client property","Client requested hints about window geometry.","The WmNormalHints properties for this window","Possible flags that can be set in a WmNormalHints client â€¦","Possible valid values for setting the <code>WM_STATE</code> property on â€¦","","Returns the set containing all flags.","Returns the set containing all flags.","Apply these size hints to a given Rect.","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags â€¦","Returns the left flags, but with all the right flags â€¦","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","Returns <code>true</code> if all of the flags in <code>other</code> are contained â€¦","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, unless that â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, dropping any â€¦","Convert from underlying bit representation, preserving all â€¦","Convert from underlying bit representation, preserving all â€¦","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and â€¦","Returns the intersection between the flags in <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Returns <code>true</code> if there are flags common to both <code>self</code> and â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","","","","","Create a new instance from component parts","Create a new instance from component parts","Create a new instance from component parts","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the â€¦","Inserts or removes the specified flags depending on the â€¦","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> â€¦","Returns the symmetric difference between the flags in <code>self</code> â€¦","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","Try to construct a WmHints instance from raw bytes.","Try to construct a WmNormalHints instance from raw bytes.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","A Query for fetching a windowâ€™s application name (the â€¦","A Query for fetching a windowâ€™s class name (the second â€¦","A query to be run against client windows for identifying â€¦","A Query for fetching a string property from a client â€¦","A Query for fetching a windowâ€™s title following ICCCM / â€¦","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,4,0,4,4,4,4,4,4,4,4,4,4,0,0,4,0,0,0,0,0,4,4,4,4,4,0,4,4,4,4,4,0,1,4,1,4,1,0,1,1,0,0,1,0,4,4,1,4,4,4,4,4,4,4,4,1,1,1,1,4,1,0,0,1,1,0,1,1,1,1,0,4,0,1,4,4,1,1,1,4,1,4,1,0,0,0,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,151,152,153,150,154,155,150,156,0,0,0,0,0,0,0,0,0,0,0,0,0,26,27,26,27,26,26,26,27,26,27,26,27,26,27,26,26,27,26,27,26,27,26,27,26,27,0,26,27,26,26,26,26,27,0,26,27,26,27,26,27,157,0,0,0,0,0,0,0,0,157,158,159,160,161,162,163,164,157,158,159,160,161,162,163,164,157,158,159,160,161,162,163,164,157,158,159,160,161,162,163,164,157,158,159,160,161,162,163,164,157,158,159,160,161,162,163,164,157,158,159,160,161,162,163,164,0,0,0,0,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,34,32,33,34,35,32,33,34,35,34,35,32,33,34,35,32,33,34,35,32,33,34,35,34,35,32,33,34,35,34,35,32,33,34,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,32,33,34,35,0,0,0,0,0,0,0,37,39,0,42,42,37,40,39,42,37,40,39,39,40,40,40,42,42,42,42,39,39,42,40,42,40,40,42,39,42,42,40,40,39,42,42,42,37,40,40,39,0,40,0,42,37,40,39,0,42,39,40,37,42,40,42,39,39,37,42,37,40,40,42,37,40,39,42,37,40,39,42,37,40,39,42,0,0,0,0,0,56,53,56,53,53,53,0,0,0,0,0,0,53,55,56,55,0,0,58,0,0,0,0,0,0,53,53,58,58,53,53,55,55,55,56,53,53,53,53,54,55,56,57,50,58,52,53,54,55,56,57,50,58,52,50,50,21,165,53,54,55,56,57,50,58,52,53,54,55,56,57,50,58,52,56,54,53,54,55,56,50,58,52,53,54,55,56,50,58,52,53,54,55,56,57,50,58,52,50,54,55,56,50,58,52,52,54,53,54,55,56,57,50,58,52,57,56,0,52,57,50,54,50,53,54,50,52,50,52,57,57,57,0,56,52,57,52,53,54,55,56,57,50,58,52,53,53,54,55,55,56,56,57,50,58,52,53,54,55,56,57,50,58,52,53,54,55,56,57,50,58,52,52,166,0,0,0,0,0,0,68,69,70,68,69,70,65,66,67,65,66,67,68,69,70,68,69,70,68,69,70,65,66,67,65,66,67,68,69,70,68,69,70,68,69,70,0,0,0,0,0,25,71,71,71,25,71,71,25,71,25,71,25,71,0,25,71,71,0,0,0,28,28,28,28,28,167,28,28,28,0,168,168,168,168,168,168,168,168,0,0,0,72,0,72,72,72,72,72,72,72,0,0,0,72,72,0,72,72,72,0,72,0,72,72,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,0,0,0,74,75,76,74,75,76,74,75,76,74,75,76,74,75,76,74,75,76,76,74,75,76,74,75,76,74,75,76,0,0,0,0,78,79,78,79,79,79,79,79,78,79,78,79,78,79,0,79,78,79,78,79,78,79,78,79,0,81,81,81,81,81,81,81,81,81,82,82,82,0,82,82,82,82,82,0,0,82,82,82,82,82,0,0,82,82,82,82,82,0,85,0,0,85,86,85,86,85,85,86,85,86,85,86,86,85,86,86,86,86,85,86,85,86,86,86,86,86,0,85,86,85,86,85,86,85,86,0,0,87,0,87,87,73,87,73,88,87,73,88,87,73,88,87,73,88,73,73,87,73,88,87,73,88,73,87,73,88,73,88,73,88,73,73,87,73,88,87,73,88,87,73,88,87,73,88,169,170,169,84,84,84,0,0,84,0,0,0,0,84,84,84,84,84,84,84,0,84,0,0,0,84,84,84,84,0,0,0,0,0,90,90,30,30,91,90,30,91,90,30,30,91,90,30,91,90,30,30,30,30,91,90,30,91,90,30,91,90,30,91,91,91,91,91,90,30,90,30,91,30,91,90,30,30,30,91,90,30,91,90,30,171,90,30,30,30,30,30,30,30,91,90,30,91,90,30,91,90,30,91,90,30,30,91,30,91,30,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,95,95,95,95,0,0,0,0,0,95,95,29,98,99,100,95,29,98,99,100,29,95,29,95,29,29,95,29,95,29,29,29,95,29,29,98,99,100,29,29,29,29,95,29,98,99,100,29,29,29,29,29,95,29,98,99,100,29,29,29,98,99,100,29,29,29,29,29,29,29,29,98,99,100,29,29,29,29,29,29,29,29,29,29,95,29,29,95,29,98,99,100,29,95,29,98,99,100,95,29,98,99,100,29,0,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,0,0,0,0,0,107,106,105,0,0,107,107,105,105,106,0,0,107,0,106,106,0,0,0,0,0,0,80,105,106,107,105,106,107,80,172,105,106,107,105,106,107,80,105,106,107,0,80,80,105,106,107,80,105,106,107,80,80,80,105,106,107,172,80,105,106,107,80,172,172,80,172,105,106,107,80,172,172,0,0,172,172,172,80,80,80,172,80,172,80,172,80,80,105,106,107,105,106,107,105,106,107,105,106,107,172,80,80,172,172,172,0,0,0,113,113,113,113,113,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,173,174,175,176,177,178,0,0,117,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,0,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,118,117,118,117,118,117,118,117,117,117,118,117,117,117,118,118,117,118,118,118,118,118,117,118,117,117,118,117,118,117,118,0,0,43,0,0,0,43,43,119,43,43,43,0,43,43,43,43,43,43,121,0,0,43,43,43,121,121,119,119,120,120,120,43,119,119,119,119,0,124,119,120,120,120,120,125,43,119,121,120,111,122,123,124,125,43,119,121,120,111,122,123,124,125,43,119,121,120,111,122,123,124,125,43,119,121,120,111,122,123,124,125,123,111,111,43,119,121,120,111,122,123,124,125,43,43,119,121,120,111,122,123,124,125,43,119,121,120,120,120,120,120,120,120,111,122,123,124,125,43,119,121,120,111,122,123,124,125,111,122,123,124,125,43,119,121,120,111,122,123,124,125,122,125,111,43,119,120,111,122,123,124,125,111,122,123,124,124,43,119,121,120,111,122,123,124,125,43,43,119,121,120,120,120,120,111,122,123,124,125,43,119,121,120,111,122,123,124,125,43,119,121,120,111,122,123,124,125,179,180,181,182,183,184,185,186,187,188,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,108,108,108,130,126,126,126,126,126,112,130,130,0,112,127,127,127,127,127,127,127,127,0,126,126,108,127,127,129,129,129,126,108,0,0,112,0,108,0,0,108,0,0,131,126,127,128,128,126,127,126,127,126,127,126,127,126,127,126,127,126,127,108,126,127,112,129,130,131,128,109,108,126,127,112,129,130,131,128,109,108,126,127,112,129,130,131,128,109,108,126,127,112,129,130,131,128,109,126,127,126,127,126,127,126,127,126,127,126,127,108,126,127,112,129,130,131,128,109,126,127,131,128,108,126,126,126,126,126,127,127,127,127,127,112,129,130,131,128,109,108,126,127,112,129,130,131,128,109,126,127,126,127,126,127,126,127,108,126,127,112,129,130,131,128,109,131,131,131,131,131,126,127,126,127,126,127,108,126,127,112,129,130,131,128,109,126,127,126,127,128,128,108,126,127,131,128,109,131,128,109,126,127,126,127,126,127,126,127,126,127,126,127,126,127,108,126,127,112,129,130,131,128,109,126,127,108,126,127,112,129,130,131,128,109,131,128,108,126,127,112,129,130,131,128,109,108,126,127,112,129,130,131,128,109,126,127,128,131,202,203,204,205,206,207,208,133,134,135,136,136,0,0,0,0,0,133,134,135,136,133,134,135,136,133,134,135,136,133,134,135,136,209,133,134,135,136,133,134,135,136,133,134,135,136,133,134,135,136],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],0,[1,1],[[]],0,0,[[1,1],3],0,[[4,5],6],[[4,5],6],[[1,5],6],[7,4],[8,4],[9,4],[10,4],[11,4],[12,4],[13,4],[[]],[[],1],[[]],[[],1],[14,1],[[]],[[]],0,0,[[1,1],3],[14,1],0,[1],[1,14],[1],[1,14],0,[4,[[16,[15]]]],0,[[]],[[],2],[[],17],[[],17],[18,[[19,[1]]]],[2,[[19,[1]]]],[[],17],[[],17],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[22,[21]]]],0,[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[23,23],[[22,[21]]]],[[23,23],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],0,0,[[]],[[]],[[]],[[]],[[14,24,24],[[22,[25]]]],[[14,24,24],[[22,[25]]]],[[14,24,24,3],26],[[],[[22,[25]]]],[26,[[22,[25]]]],[27,[[22,[25]]]],[26,26],[27,27],[[]],[[]],[[],26],[[26,5],6],[[27,5],6],[[]],[[]],[[26,28],[[16,[[22,[25]]]]]],[[27,28],[[16,[[22,[25]]]]]],[[]],[[]],[[26,29,30]],[[27,29,30]],0,[26,2],[27,2],[[14,24,24],[[22,[25]]]],[[14,24,24],[[22,[25]]]],[[14,24,24,3],26],[[]],[[]],0,[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[22,[25,31]]]],[[],[[22,[25,31]]]],[[],[[22,[25,31]]]],[[],[[22,[25,31]]]],[32,32],[33,33],[34,34],[35,35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[16,[[22,[25,31]]]]]],[28,[[16,[[22,[25,31]]]]]],[28,[[16,[[22,[25,31]]]]]],[28,[[16,[[22,[25,31]]]]]],[32,22],[33,22],[34,22],[35,22],0,[[]],[[]],[[]],[[]],[[29,30]],[[29,30]],[[29,30]],[[29,30]],0,0,[30],[30],[30],[30],[[18,16,30]],[[18,16,30]],[[18,16,30]],[[18,16,30]],[[],2],[[],2],[[],2],[[],2],0,0,[[]],[[]],[[]],[[]],[[34,30],30],[[35,30],30],[[32,30,36],36],[[33,30,36],36],[[34,30,36],36],[32,2],[33,2],[34,2],[35,2],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],[[],20],[[[22,[25]]],[[22,[25]]]],[[[22,[25]]],[[22,[25]]]],[[[22,[25]],14,14],[[22,[25]]]],[[[22,[25]],14],[[22,[25]]]],0,0,0,0,0,0,0,[[37,38]],[[39,38]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[40,40],[[]],[[40,40],41],[42],[42],[42],[42],0,[39,[[16,[43]]]],[[],42],[[],40],0,[40],[[40,40],3],0,[39,[[19,[[45,[[44,[38]]]]]]]],0,[[42,5],6],[[40,5],6],[[40,5],6],[[[39,[46]],5],6],0,0,[[]],[[]],[14,40],[[]],[[]],0,[40],0,[[]],[[]],[[]],[[]],0,0,[39,47],[[40,40],3],[[42,48,49],[[19,[37]]]],0,[[40,40],[[16,[41]]]],0,[39,[[16,[38]]]],[39,40],[37,19],0,0,[[]],[[],2],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],[[],20],0,[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[[],[[22,[21]]]],[18,[[22,[21]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,51],0,[39,19],[[52,39],19],[53,53],[54,54],[55,55],[56,56],[57,57],[50,50],[58,58],[52,52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[56,56],41],0,[[53,53],3],[[54,54],3],[[55,55],3],[[56,56],3],[[50,50],3],[[58,58],3],[[52,52],3],[[53,5],6],[[54,5],6],[[55,5],6],[[56,5],6],[[50,5],6],[[58,5],6],[[52,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[51,59],[[19,[50]]]],[54],[55],[56],[50],[58],[52],0,[[54,60],54],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],57],[[],[[19,[[61,[2,51]]]]]],0,[57,62],[50,59],0,0,[[53,53],3],[[54,54],3],[[50,50],3],[[52,52],3],[[55,[36,[56]]],50],[[40,63,63,63,63,50,58],52],[57,16],[57,16],[[57,62],16],[[[61,[[22,[21]]]]],[[19,[48]]]],[[56,56],[[16,[41]]]],0,[57],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,[[17,[53]]]],[[],17],[[],17],[[],17],[51,[[19,[55]]]],[[],17],[18,[[17,[56]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[22,[65]]]],[[],[[22,[66]]]],[[],[[22,[67]]]],[[43,39],[[19,[3]]]],[[40,39],19],[39,19],[[68,43,39],[[19,[3]]]],[[69,40,39],19],[[70,39],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],68],[[],69],[[],70],[[[22,[65]]],[[22,[65]]]],[[[22,[66]]],[[22,[66]]]],[[[22,[67]]],[[22,[67]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],0,0,0,0,0,[[],[[22,[25]]]],[71,[[22,[25]]]],[71],[[],71],[28,[[16,[[22,[25]]]]]],[71],[[71,28],[[16,[[22,[25]]]]]],[[29,30]],[[71,29,30]],[30],[[71,30]],[[18,16,30]],[[71,18,16,30]],0,[[],2],[71,2],[71,36],0,0,0,[[]],[[]],[28,16],[[]],[[]],[[],28],[[],17],[[],17],[[],20],0,[[],22],[28,[[16,[[22,[25]]]]]],[30],[[[22,[25]]],[[22,[25]]]],[30,30],[[30,36],36],[[],2],[[],[[22,[25]]]],0,0,0,0,0,0,0,[[]],[[]],[72,72],[[]],[[72,72],41],[71,[[22,[21]]]],[73,[[22,[21]]]],[73,[[22,[21]]]],[[72,72],3],[[72,5],6],[[18,18],[[22,[21]]]],[[]],[[]],[[72,72],[[16,[41]]]],[[40,72,39],19],[[]],[[],[[22,[21]]]],[[],17],[[],17],[[],20],0,0,0,0,0,0,0,0,0,0,0,[42,42],[[43,39],[[19,[3]]]],[39,19],[39,19],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[74,40,39],19],[[75,40,39],19],[[76,40,39],19],[[74,5],6],[[75,5],6],[[76,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[77,77],76],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],0,0,0,[[37,[36,[78]]],37],[[]],[[]],[[]],[[]],[[79,39],19],[79,79],[[]],[[79,79],3],[[[78,[80]],5],6],[[79,5],6],[[]],[[]],[[]],[[]],[[40,39],19],[[79,79],3],[[18,18,3]],[[]],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],0,[[]],[[]],[18,[[22,[67]]]],[[81,39],19],[[]],[[]],[[],17],[[],17],[[],20],0,0,0,0,[[]],[[]],[82,82],[[]],[[82,82],41],0,0,[[82,82],3],[[82,5],6],[[]],[82],[[]],[[[83,[18]],[83,[18]]],19],[[[83,[18]],[83,[18]],82,62],19],[[82,82],[[16,[41]]]],[[]],[[],17],[[],17],[[],20],[[18,18,84],19],0,0,0,[[]],[[]],[[]],[[]],[[85,39],19],[85,85],[86,86],[[]],[[]],[[],85],[[],86],[[86,86],3],[[85,5],6],[[86,5],6],0,0,0,[[]],[[]],[[]],[[]],0,0,0,[[86,86],3],[[39,86],2],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[87,87],[73,73],[88,88],[[]],[[]],[[]],[[],73],0,[[87,5],6],[[73,5],6],[[88,5],6],[[]],[[]],[[]],0,[[]],[[]],[[]],0,[[[89,[2]],[36,[[89,[2]]]],73],88],0,[[88,62],[[19,[87]]]],0,0,[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[84,84],[[]],[[84,84],3],[[84,5],6],[[]],0,[[]],0,0,0,[[]],[[],17],[[],17],[[],20],0,0,0,0,0,[[90,30],30],[[90,30],90],[[30,14],[[36,[30]]]],[[30,14],[[36,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[30,30],[[16,[30]]]],[91,91],[90,90],[30,30],[[]],[[]],[[]],[[30,30],3],[30,3],[30],[[],91],[[],90],[[],30],[[91,91],3],[[90,90],3],[[30,30],3],[[91,5],6],[[90,5],6],[[30,5],6],[[],91],[[],91],[30,91],[30,91],[[]],[[]],[[]],[[],90],0,[91],[30],[[]],[[]],[[]],[[30,30],3],[30,91],[[91,91],3],[[90,90],3],[[30,30],3],[[14,14],91],[[77,77,77,77],90],[[14,14,14,14],30],[30,90],[[90,30],90],[[30,30],90],[[30,23,23]],[[30,23,23]],[[30,77],30],[[30,77],30],[[30,14],16],[[30,14],16],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],0,0,0,0,0,0,[[]],[[]],[[[93,[92]]],[[93,[92]]]],[[]],[[],[[93,[94]]]],[[[93,[46]],5],6],[[]],[93,30],[93,62],[[]],[[]],[[],17],[[],17],[[],20],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[[22,[25,31]]]]]],[95,95],[[[29,[92]]],[[29,[92]]]],[[]],[[]],[[[29,[96]]],3],[[],95],[[],[[29,[94]]]],[[95,95],3],[[[29,[96]],29],3],[29,[[16,[29]]]],[29,36],[[95,5],6],[[[29,[46]],5],6],[[[29,[97]],5],6],[[[98,[46]],5],6],[[[99,[46]],5],6],[[[100,[46]],5],6],[29,29],[29,29],[29,29],[29],[[]],[[]],[[]],[[]],[[]],[[[29,[92]]],[[16,[[29,[92]]]]]],[[[29,[[22,[25,31]]]]]],[29],[29,29],[[29,95],29],[[]],[[]],[[]],[[]],[[]],[29,99],[29,98],[29,100],[[]],[[]],[[]],[29,3],[29,99],[29,100],[29],[29,62],[29,29],[[[29,[96]],29],3],[[],29],[98,16],[99,16],[100,16],[29],[29],[29,29],[29,29],[29,29],[29,29],[[[29,[[22,[25,31]]]]],36],[29,29],[29,29],[29,29],[[]],[[]],[[],2],[[],17],[[],17],[[],17],[[],17],[[],17],[[],[[16,[29]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],[[],20],[[],20],[29,101],0,[102,19],[[102,71],19],[[]],[[]],[102,101],[[[102,[92]]],[[102,[92]]]],[[]],[102,3],[[102,18],3],[102,16],[102,93],[102,[[16,[29]]]],[102,18],[102,103],[102,103],[[],[[102,[94]]]],[102],[102],[[102,30],19],[[[102,[46]],5],6],[102],[102],[102],[[102,62]],[[102,[83,[18]]]],[102],[[]],[[102,[83,[18]]],3],[102,101],[102,101],[102,101],[102],[[102,95]],[[]],[102],[102],[102],[102],[[102,[83,[18]]]],[[102,[83,[18]]]],[102],[102],[102,101],[102,101],[102,[[36,[2]]]],[102,101],[102],[102],[[102,[83,[18]]]],[102,16],[102,16],[102],[102],[102],[102,101],[102,101],[102,[[16,[30]]]],[102],[102],[102],[102,[[16,[18]]]],[[102,62],[[16,[18]]]],[[102,62],[[16,[2]]]],[[]],[102],[[],17],[[],17],[71,[[19,[102]]]],[[],20],[102],[[102,18],[[16,[103]]]],[[102,18],[[16,[103]]]],[102,101],[102,101],0,[[]],[[]],[103],[103,101],[[[103,[92]]],[[103,[92]]]],[[]],[[[103,[96]]],3],[[],103],[[[103,[46]],5],6],[103,16],[[]],[103],[103,62],[[]],[103,3],[103,2],[[62,71,[16,[29]]],103],[103],[103],[103,18],[[]],[[],17],[[],17],[[],20],[18,104],[[[89,[2]]],19],[[[89,[2]]],[[104,[2]]]],[[[89,[2]]],[[104,[2]]]],[[[89,[2]]],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[40,[[19,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[19,[30]]]],[40,[[19,[3]]]],[105,105],[106,106],[107,107],[[]],[[]],[[]],[[],[[19,[91]]]],[[105,105],3],[[106,106],3],[[107,107],3],0,[[],[[19,[[36,[40]]]]]],[[]],[[105,5],6],[[106,5],6],[[107,5],6],[40,19],[[]],[[]],[[]],[[40,18],[[19,[[16,[108]]]]]],[40,[[19,[109]]]],[[],19],[105],[106],[107],[[40,47,61],19],[18,[[19,[40]]]],[[]],[[]],[[]],[40,19],[39,19],[[40,39],19],[40,19],[39,19],[[105,105],3],[[106,106],3],[[107,107],3],[[],[[19,[43]]]],[[40,30],19],[[],19],0,0,[39,19],[[],19],[[40,110,47],19],[[],40],[[],[[19,[[36,[30]]]]]],[111,19],[[40,39],19],[40,19],[40,19],[40,19],[[40,42],19],[[40,18,108],19],[[40,112],19],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],[[40,39],19],[40,19],[[40,63,63],19],[[39,62],19],[40,19],[40,[[19,[2]]]],0,0,0,[[113,40],[[19,[2]]]],[[]],[[]],[[113,40],[[19,[30]]]],[113],0,[[113,105,30,3],[[19,[40]]]],[113,[[19,[91]]]],[113,[[19,[[36,[40]]]]]],[113],[[[113,[[0,[46,114]]]],5],6],[[113,40],19],[[]],[[113,40,18],[[19,[[16,[108]]]]]],[[113,40],[[19,[109]]]],[113,19],[[113,18],[[19,[40]]]],[[]],[[113,40],19],[[113,40],19],[[],[[19,[[113,[115]]]]]],[[],[[19,[[113,[116]]]]]],[113,[[19,[43]]]],[113,40],[113,[[19,[[36,[30]]]]]],[[113,111],19],[[113,40],19],[[113,40],19],[[113,40,18,108],19],[[113,40,112],19],[[],17],[[],17],[[],20],[[113,40],19],[[113,40,63,63],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[117,18],[[]],[[]],[[]],[[]],[117,117],[118,118],[[]],[[]],[[117,117],3],[[117,5],6],[[]],[[]],[18,[[17,[117]]]],[117],[[]],[[]],[[]],[[],118],[118,62],[118,16],[118,16],[[118,62],16],[118],[[]],[[]],[18,[[17,[117]]]],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[119,[[19,[111]]]],[120,[[36,[59]]]],[120,[[36,[14]]]],[120,[[36,[51]]]],[120,[[36,[62]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,43],[119,119],[121,121],[120,120],[111,111],[122,122],[123,123],[124,124],[125,125],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[43,43],3],[[119,119],3],[[121,121],3],[[120,120],3],[[111,111],3],[[122,122],3],[[123,123],3],[[124,124],3],[[125,125],3],[[43,5],6],[[43,5],6],[[119,5],6],[[121,5],6],[[120,5],6],[[111,5],6],[[122,5],6],[[123,5],6],[[124,5],6],[[125,5],6],[[]],[[]],[[]],[[]],[[],120],[[],120],[[],120],[[],120],[[],120],[[],120],[[]],[[]],[[]],[[]],[[]],[43],[119],[121],[120],[111],[122],[123],[124],[125],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[43,43],3],[[119,119],3],[[120,120],3],[[111,111],3],[[122,122],3],[[123,123],3],[[124,124],3],[[125,125],3],[[40,121,[89,[2]],120],111],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[],17],[[],17],[[],17],[[],[[17,[120]]]],[[],[[17,[120]]]],[[],17],[[],[[17,[120]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],126],[[],127],[[128,30],30],0,[[126,126],126],[[127,127],127],[[126,126]],[[127,127]],[[126,126],126],[[127,127],127],[[126,126]],[[127,127]],[126,14],[127,14],[[126,126],126],[[127,127],127],[[126,126]],[[127,127]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[108,108],[126,126],[127,127],[112,112],[129,129],[130,130],[131,131],[128,128],[109,109],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[126,126],41],[[127,127],41],[126,126],[127,127],[[126,126],3],[[127,127],3],[[],126],[[],127],[[126,126],126],[[127,127],127],[[],126],[[],127],[[108,108],3],[[126,126],3],[[127,127],3],[[112,112],3],[[129,129],3],[[130,130],3],[[131,131],3],[[128,128],3],[[109,109],3],[[126,132]],[[127,132]],0,0,[[108,5],6],[[126,5],6],[[126,5],6],[[126,5],6],[[126,5],6],[[126,5],6],[[127,5],6],[[127,5],6],[[127,5],6],[[127,5],6],[[127,5],6],[[112,5],6],[[129,5],6],[[130,5],6],[[131,5],6],[[128,5],6],[[109,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,[[16,[126]]]],[14,[[16,[127]]]],[14,126],[14,127],[14,126],[14,127],[132,126],[132,127],[108],[126],[127],[112],[129],[130],[131],[128],[109],0,0,0,0,0,[[126,126]],[[127,127]],[[126,126],126],[[127,127],127],[[126,126],3],[[127,127],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[126,3],[127,3],[126,3],[127,3],0,0,[[108,108],3],[[126,126],3],[[127,127],3],[[131,131],3],[[128,128],3],[[109,109],3],[[126,3,112,14,40,91,14,14],131],[[127,[16,[30]],[16,[30]],[16,[30]],[16,[30]]],128],[[3,129,130],109],[126,126],[127,127],[[126,126],[[16,[41]]]],[[127,127],[[16,[41]]]],[[126,126]],[[127,127]],[[126,126,3]],[[127,127,3]],[[126,126],126],[[127,127],127],[[126,126]],[[127,127]],[[126,126],126],[[127,127],127],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[126,126]],[[127,127]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],[[19,[131]]]],[[],[[19,[128]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[126,126],126],[[127,127],127],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,[[19,[3]]]],[[133,40],[[19,[3]]]],[[134,40],[[19,[3]]]],[[135,40],[[19,[3]]]],[[136,40],[[19,[3]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],20],[[],20],[[],20],[[],20]],"p":[[3,"Color"],[3,"String"],[15,"bool"],[4,"Error"],[3,"Formatter"],[6,"Result"],[4,"ReplyOrIdError"],[4,"ReplyError"],[3,"Error"],[3,"FromUtf8Error"],[3,"ParseIntError"],[4,"ConnectError"],[4,"ConnectionError"],[15,"u32"],[8,"Error"],[4,"Option"],[4,"Result"],[15,"str"],[6,"Result"],[3,"TypeId"],[8,"KeyEventHandler"],[3,"Box"],[15,"i32"],[15,"f32"],[8,"Layout"],[3,"MainAndStack"],[3,"Monocle"],[3,"Message"],[3,"Stack"],[3,"Rect"],[3,"Global"],[3,"ReflectHorizontal"],[3,"ReflectVertical"],[3,"Gaps"],[3,"ReserveTop"],[3,"Vec"],[3,"WindowManager"],[8,"Any"],[3,"State"],[3,"Xid"],[4,"Ordering"],[3,"Config"],[4,"XEvent"],[3,"RefCell"],[3,"Arc"],[8,"Debug"],[3,"HashSet"],[6,"KeyBindings"],[6,"MouseBindings"],[3,"MouseState"],[15,"u8"],[3,"MouseEvent"],[4,"KeyPress"],[3,"KeyCode"],[4,"MouseButton"],[4,"ModifierKey"],[3,"ModifierKeyIter"],[4,"MouseEventKind"],[15,"u16"],[6,"KeyCodeMask"],[3,"HashMap"],[15,"usize"],[15,"i16"],[4,"XKeySym"],[8,"EventHook"],[8,"ManageHook"],[8,"StateHook"],[3,"ComposedEventHook"],[3,"ComposedManageHook"],[3,"ComposedStateHook"],[6,"LayoutStack"],[4,"FullScreenAction"],[3,"DMenuConfig"],[3,"DefaultTiled"],[3,"FloatingFixed"],[3,"FloatingCentered"],[15,"f64"],[3,"NamedScratchPad"],[3,"ToggleNamedScratchPad"],[8,"XConn"],[3,"SpawnOnStartup"],[4,"NotifyLevel"],[8,"AsRef"],[4,"RelativePosition"],[3,"NotfyState"],[3,"CurrentStateConfig"],[4,"MenuMatch"],[3,"DMenu"],[8,"Into"],[3,"RelativeRect"],[3,"Point"],[8,"Clone"],[3,"Screen"],[8,"Default"],[4,"Position"],[8,"PartialEq"],[8,"Display"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[8,"Iterator"],[3,"StackSet"],[3,"Workspace"],[6,"Result"],[4,"WinType"],[4,"ClientConfig"],[4,"ClientAttr"],[4,"Prop"],[3,"WindowAttributes"],[6,"ClientSet"],[3,"ClientMessage"],[4,"WmState"],[3,"Conn"],[8,"Connection"],[3,"XCBConnection"],[3,"RustConnection"],[4,"Atom"],[3,"AtomIter"],[4,"ClientMessageKind"],[4,"ClientMessageData"],[4,"ClientEventMask"],[3,"ConfigureEvent"],[3,"ExposeEvent"],[3,"PointerChange"],[3,"PropertyEvent"],[3,"WmHintsFlags"],[3,"WmNormalHintsFlags"],[3,"WmNormalHints"],[4,"MapState"],[4,"WindowClass"],[3,"WmHints"],[8,"IntoIterator"],[3,"Title"],[3,"AppName"],[3,"ClassName"],[3,"StringProperty"],[13,"Custom"],[13,"Io"],[13,"InvalidUtf8"],[13,"ParseInt"],[13,"Randr"],[13,"X11rbConnect"],[13,"X11rbConnection"],[13,"X11rbReplyError"],[13,"X11rbReplyOrIdError"],[13,"X11rbX11Error"],[13,"UnknownMouseButton"],[13,"InvalidClientMessage"],[13,"InvalidHexColor"],[13,"InvalidPropertyData"],[13,"InsufficientWorkspaces"],[13,"UnknownKeyName"],[13,"UnknownModifier"],[13,"InvalidHints"],[13,"NonUniqueTags"],[13,"UnknownStateExtension"],[3,"IncMain"],[3,"ExpandMain"],[3,"ShrinkMain"],[3,"Rotate"],[3,"Mirror"],[3,"UnwrapTransformer"],[3,"Hide"],[3,"ShutDown"],[8,"MouseEventHandler"],[13,"Utf8"],[8,"IntoMessage"],[8,"LayoutTransformer"],[13,"Line"],[13,"UserInput"],[8,"RelativeTo"],[8,"XConnExt"],[13,"BorderColor"],[13,"BorderPx"],[13,"Position"],[13,"StackBelow"],[13,"StackAbove"],[13,"InputOutput"],[13,"U8"],[13,"U16"],[13,"U32"],[13,"DeleteWindow"],[13,"TakeFocus"],[13,"TakeSystrayOwnership"],[13,"XEmbedFocusIn"],[13,"XEmbedModalityOn"],[13,"XEmbedNotify"],[13,"XEmbedWindowActivate"],[13,"ClientMessage"],[13,"ConfigureNotify"],[13,"ConfigureRequest"],[13,"Enter"],[13,"Expose"],[13,"FocusIn"],[13,"Destroy"],[13,"KeyPress"],[13,"Leave"],[13,"MapRequest"],[13,"MouseEvent"],[13,"PropertyNotify"],[13,"UnmapNotify"],[13,"Atom"],[13,"Bytes"],[13,"Cardinal"],[13,"UTF8String"],[13,"Window"],[13,"WmHints"],[13,"WmNormalHints"],[8,"Query"]]},\
"penrose_keysyms":{"doc":"Auto generated Keysym enum for use with xcb keycodes","tn":["XF86XK_AudioLowerVolume","XF86XK_AudioMicMute","XF86XK_AudioMute","XF86XK_AudioNext","XF86XK_AudioPlay","XF86XK_AudioPrev","XF86XK_AudioRaiseVolume","XF86XK_AudioStop","XF86XK_Calculator","XF86XK_DisplayOff","XF86XK_KbdBrightnessDown","XF86XK_KbdBrightnessUp","XF86XK_KbdLightOnOff","XF86XK_MonBrightnessCycle","XF86XK_MonBrightnessDown","XF86XK_MonBrightnessUp","XF86XK_Standby","XF86XK_TouchpadToggle","XK_0","XK_1","XK_2","XK_3","XK_3270_AltCursor","XK_3270_Attn","XK_3270_BackTab","XK_3270_Copy","XK_3270_CursorBlink","XK_3270_CursorSelect","XK_3270_DeleteWord","XK_3270_Duplicate","XK_3270_Enter","XK_3270_EraseEOF","XK_3270_EraseInput","XK_3270_ExSelect","XK_3270_FieldMark","XK_3270_Ident","XK_3270_Jump","XK_3270_KeyClick","XK_3270_Left2","XK_3270_PA1","XK_3270_PA2","XK_3270_PA3","XK_3270_Play","XK_3270_Quit","XK_3270_Record","XK_3270_Reset","XK_3270_Right2","XK_3270_Rule","XK_3270_Setup","XK_3270_Test","XK_4","XK_5","XK_6","XK_7","XK_8","XK_9","XK_A","XK_AE","XK_Aacute","XK_Abreve","XK_Abreveacute","XK_Abrevetilde","XK_Adiaeresis","XK_Alt_L","XK_Alt_R","XK_Amacron","XK_Aogonek","XK_Aring","XK_Atilde","XK_B","XK_BackSpace","XK_Begin","XK_Break","XK_C","XK_CH","XK_C_H","XK_C_h","XK_Cacute","XK_Cancel","XK_Caps_Lock","XK_Ccaron","XK_Ccedilla","XK_Ch","XK_Clear","XK_ColonSign","XK_Control_L","XK_Control_R","XK_CruzeiroSign","XK_D","XK_Dcaron","XK_Delete","XK_DongSign","XK_Down","XK_Dstroke","XK_E","XK_ENG","XK_ETH","XK_EZH","XK_Eacute","XK_Ecaron","XK_EcuSign","XK_Ediaeresis","XK_Emacron","XK_End","XK_Eogonek","XK_Escape","XK_Eth","XK_Etilde","XK_EuroSign","XK_Execute","XK_F","XK_F1","XK_F10","XK_F11","XK_F12","XK_F13","XK_F14","XK_F15","XK_F16","XK_F17","XK_F18","XK_F19","XK_F2","XK_F20","XK_F21","XK_F22","XK_F23","XK_F24","XK_F25","XK_F26","XK_F27","XK_F28","XK_F29","XK_F3","XK_F30","XK_F31","XK_F32","XK_F33","XK_F34","XK_F35","XK_F4","XK_F5","XK_F6","XK_F7","XK_F8","XK_F9","XK_FFrancSign","XK_Find","XK_G","XK_Gbreve","XK_Gcaron","XK_Gcedilla","XK_H","XK_Help","XK_Home","XK_Hstroke","XK_Hyper_L","XK_Hyper_R","XK_I","XK_ISO_Center_Object","XK_ISO_Continuous_Underline","XK_ISO_Discontinuous_Underline","XK_ISO_Emphasize","XK_ISO_Enter","XK_ISO_Left_Tab","XK_ISO_Level2_Latch","XK_ISO_Level3_Latch","XK_ISO_Level3_Lock","XK_ISO_Level3_Shift","XK_ISO_Level5_Latch","XK_ISO_Level5_Lock","XK_ISO_Level5_Shift","XK_ISO_Lock","XK_ISO_Partial_Space_Left","XK_ISO_Partial_Space_Right","XK_ISO_Set_Margin_Left","XK_ISO_Set_Margin_Right","XK_Iacute","XK_Ibreve","XK_Idiaeresis","XK_Imacron","XK_Insert","XK_Iogonek","XK_Itilde","XK_J","XK_K","XK_KP_0","XK_KP_1","XK_KP_2","XK_KP_3","XK_KP_4","XK_KP_5","XK_KP_6","XK_KP_7","XK_KP_8","XK_KP_9","XK_KP_Add","XK_KP_Begin","XK_KP_Decimal","XK_KP_Delete","XK_KP_Divide","XK_KP_Down","XK_KP_End","XK_KP_Enter","XK_KP_Equal","XK_KP_F1","XK_KP_F2","XK_KP_F3","XK_KP_F4","XK_KP_Home","XK_KP_Insert","XK_KP_Left","XK_KP_Multiply","XK_KP_Next","XK_KP_Page_Down","XK_KP_Page_Up","XK_KP_Prior","XK_KP_Right","XK_KP_Separator","XK_KP_Space","XK_KP_Subtract","XK_KP_Tab","XK_KP_Up","XK_Kcedilla","XK_Korean_Won","XK_L","XK_L1","XK_L10","XK_L2","XK_L3","XK_L4","XK_L5","XK_L6","XK_L7","XK_L8","XK_L9","XK_Lacute","XK_Lcaron","XK_Lcedilla","XK_Left","XK_Linefeed","XK_LiraSign","XK_Lstroke","XK_M","XK_Menu","XK_Meta_L","XK_Meta_R","XK_MillSign","XK_Mode_switch","XK_N","XK_Nacute","XK_NairaSign","XK_Ncaron","XK_Ncedilla","XK_NewSheqelSign","XK_Next","XK_Ntilde","XK_Num_Lock","XK_O","XK_OE","XK_Oacute","XK_Obarred","XK_Ocaron","XK_Odiaeresis","XK_Odoubleacute","XK_Omacron","XK_Ooblique","XK_Oslash","XK_Otilde","XK_P","XK_Page_Down","XK_Page_Up","XK_Pause","XK_PesetaSign","XK_Print","XK_Prior","XK_Q","XK_R","XK_R1","XK_R10","XK_R11","XK_R12","XK_R13","XK_R14","XK_R15","XK_R2","XK_R3","XK_R4","XK_R5","XK_R6","XK_R7","XK_R8","XK_R9","XK_Racute","XK_Rcaron","XK_Rcedilla","XK_Redo","XK_Return","XK_Right","XK_RupeeSign","XK_S","XK_SCHWA","XK_Sacute","XK_Scaron","XK_Scedilla","XK_Scroll_Lock","XK_Select","XK_Shift_L","XK_Shift_Lock","XK_Shift_R","XK_Super_L","XK_Super_R","XK_Sys_Req","XK_T","XK_Tab","XK_Tcaron","XK_Tcedilla","XK_Terminate_Server","XK_Tslash","XK_U","XK_Uacute","XK_Ubreve","XK_Udiaeresis","XK_Udoubleacute","XK_Umacron","XK_Undo","XK_Uogonek","XK_Up","XK_Uring","XK_Utilde","XK_V","XK_W","XK_Wacute","XK_Wdiaeresis","XK_WonSign","XK_X","XK_Y","XK_Yacute","XK_Ydiaeresis","XK_Ytilde","XK_Z","XK_Zacute","XK_Zcaron","XK_Zstroke","XK_a","XK_aacute","XK_abreve","XK_abreveacute","XK_abrevetilde","XK_acute","XK_adiaeresis","XK_ae","XK_amacron","XK_ampersand","XK_aogonek","XK_apostrophe","XK_approximate","XK_aring","XK_asciicircum","XK_asciitilde","XK_asterisk","XK_at","XK_atilde","XK_b","XK_backslash","XK_ballotcross","XK_bar","XK_blank","XK_botintegral","XK_botleftparens","XK_botleftsqbracket","XK_botrightparens","XK_botrightsqbracket","XK_bott","XK_braceleft","XK_braceright","XK_bracketleft","XK_bracketright","XK_breve","XK_brokenbar","XK_c","XK_c_h","XK_cacute","XK_careof","XK_caret","XK_caron","XK_ccaron","XK_ccedilla","XK_cedilla","XK_cent","XK_ch","XK_checkerboard","XK_checkmark","XK_club","XK_colon","XK_comma","XK_copyright","XK_cr","XK_crossinglines","XK_currency","XK_cursor","XK_d","XK_dagger","XK_dcaron","XK_decimalpoint","XK_degree","XK_diaeresis","XK_diamond","XK_digitspace","XK_division","XK_dollar","XK_doubbaselinedot","XK_doubleacute","XK_doubledagger","XK_doublelowquotemark","XK_downarrow","XK_downcaret","XK_downshoe","XK_downstile","XK_downtack","XK_dstroke","XK_e","XK_eacute","XK_ecaron","XK_ediaeresis","XK_ellipsis","XK_em3space","XK_em4space","XK_emacron","XK_emdash","XK_emfilledrect","XK_emopenrectangle","XK_emspace","XK_endash","XK_eng","XK_enspace","XK_eogonek","XK_equal","XK_eth","XK_etilde","XK_exclam","XK_exclamdown","XK_ezh","XK_f","XK_femalesymbol","XK_ff","XK_figdash","XK_fiveeighths","XK_fivesixths","XK_fourfifths","XK_function","XK_g","XK_gbreve","XK_gcaron","XK_gcedilla","XK_grave","XK_greater","XK_greaterthanequal","XK_guillemotleft","XK_guillemotright","XK_h","XK_hairspace","XK_heart","XK_hexagram","XK_horizconnector","XK_hstroke","XK_ht","XK_hyphen","XK_i","XK_iacute","XK_ibreve","XK_identical","XK_idiaeresis","XK_idotless","XK_ifonlyif","XK_imacron","XK_implies","XK_includedin","XK_includes","XK_infinity","XK_integral","XK_intersection","XK_iogonek","XK_itilde","XK_j","XK_jot","XK_k","XK_kappa","XK_kcedilla","XK_kra","XK_l","XK_lacute","XK_latincross","XK_lcaron","XK_lcedilla","XK_leftanglebracket","XK_leftarrow","XK_leftcaret","XK_leftdoublequotemark","XK_leftmiddlecurlybrace","XK_leftopentriangle","XK_leftpointer","XK_leftradical","XK_leftshoe","XK_leftsinglequotemark","XK_leftt","XK_lefttack","XK_less","XK_lessthanequal","XK_lf","XK_logicaland","XK_logicalor","XK_lowleftcorner","XK_lowrightcorner","XK_lstroke","XK_m","XK_macron","XK_malesymbol","XK_maltesecross","XK_marker","XK_masculine","XK_minus","XK_minutes","XK_mu","XK_multiply","XK_musicalflat","XK_musicalsharp","XK_n","XK_nabla","XK_nacute","XK_ncaron","XK_ncedilla","XK_nl","XK_nobreakspace","XK_notequal","XK_notsign","XK_ntilde","XK_numbersign","XK_numerosign","XK_o","XK_oacute","XK_obarred","XK_ocaron","XK_odiaeresis","XK_odoubleacute","XK_oe","XK_ogonek","XK_omacron","XK_oneeighth","XK_onefifth","XK_onehalf","XK_onequarter","XK_onesixth","XK_onethird","XK_ooblique","XK_openstar","XK_ordfeminine","XK_oslash","XK_otilde","XK_overbar","XK_overline","XK_p","XK_paragraph","XK_parenleft","XK_parenright","XK_partialderivative","XK_percent","XK_period","XK_periodcentered","XK_permille","XK_phonographcopyright","XK_plus","XK_plusminus","XK_prescription","XK_prolongedsound","XK_punctspace","XK_q","XK_quad","XK_question","XK_questiondown","XK_quotedbl","XK_quoteleft","XK_quoteright","XK_r","XK_racute","XK_radical","XK_rcaron","XK_rcedilla","XK_registered","XK_rightanglebracket","XK_rightarrow","XK_rightcaret","XK_rightdoublequotemark","XK_rightmiddlecurlybrace","XK_rightopentriangle","XK_rightpointer","XK_rightshoe","XK_rightsinglequotemark","XK_rightt","XK_righttack","XK_s","XK_sacute","XK_scaron","XK_scedilla","XK_schwa","XK_script_switch","XK_seconds","XK_section","XK_semicolon","XK_semivoicedsound","XK_seveneighths","XK_signaturemark","XK_signifblank","XK_similarequal","XK_singlelowquotemark","XK_slash","XK_soliddiamond","XK_space","XK_ssharp","XK_sterling","XK_t","XK_tcaron","XK_tcedilla","XK_telephone","XK_telephonerecorder","XK_therefore","XK_thinspace","XK_threeeighths","XK_threefifths","XK_threequarters","XK_topintegral","XK_topleftparens","XK_topleftradical","XK_topleftsqbracket","XK_toprightparens","XK_toprightsqbracket","XK_topt","XK_trademark","XK_tslash","XK_twofifths","XK_twothirds","XK_u","XK_uacute","XK_ubreve","XK_udiaeresis","XK_udoubleacute","XK_umacron","XK_underbar","XK_underscore","XK_union","XK_uogonek","XK_uparrow","XK_upcaret","XK_upleftcorner","XK_uprightcorner","XK_upshoe","XK_upstile","XK_uptack","XK_uring","XK_utilde","XK_v","XK_variation","XK_vertbar","XK_vertconnector","XK_voicedsound","XK_vt","XK_w","XK_wacute","XK_wdiaeresis","XK_x","XK_y","XK_yacute","XK_ydiaeresis","XK_yen","XK_ytilde","XK_z","XK_zacute","XK_zcaron","XK_zstroke","XKeySym","XKeySymIter","as_ref","as_utf8_string","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","fmt","from","from","from_str","hash","into","into","into_iter","iter","len","next","next_back","nth","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["penrose_keysymsd":["XF86XK_AudioLowerVolume","XF86XK_AudioMicMute","XF86XK_AudioMute","XF86XK_AudioNext","XF86XK_AudioPlay","XF86XK_AudioPrev","XF86XK_AudioRaiseVolume","XF86XK_AudioStop","XF86XK_Calculator","XF86XK_DisplayOff","XF86XK_KbdBrightnessDown","XF86XK_KbdBrightnessUp","XF86XK_KbdLightOnOff","XF86XK_MonBrightnessCycle","XF86XK_MonBrightnessDown","XF86XK_MonBrightnessUp","XF86XK_Standby","XF86XK_TouchpadToggle","XK_0","XK_1","XK_2","XK_3","XK_3270_AltCursor","XK_3270_Attn","XK_3270_BackTab","XK_3270_Copy","XK_3270_CursorBlink","XK_3270_CursorSelect","XK_3270_DeleteWord","XK_3270_Duplicate","XK_3270_Enter","XK_3270_EraseEOF","XK_3270_EraseInput","XK_3270_ExSelect","XK_3270_FieldMark","XK_3270_Ident","XK_3270_Jump","XK_3270_KeyClick","XK_3270_Left2","XK_3270_PA1","XK_3270_PA2","XK_3270_PA3","XK_3270_Play","XK_3270_Quit","XK_3270_Record","XK_3270_Reset","XK_3270_Right2","XK_3270_Rule","XK_3270_Setup","XK_3270_Test","XK_4","XK_5","XK_6","XK_7","XK_8","XK_9","XK_A","XK_AE","XK_Aacute","XK_Abreve","XK_Abreveacute","XK_Abrevetilde","XK_Adiaeresis","XK_Alt_L","XK_Alt_R","XK_Amacron","XK_Aogonek","XK_Aring","XK_Atilde","XK_B","XK_BackSpace","XK_Begin","XK_Break","XK_C","XK_CH","XK_C_H","XK_C_h","XK_Cacute","XK_Cancel","XK_Caps_Lock","XK_Ccaron","XK_Ccedilla","XK_Ch","XK_Clear","XK_ColonSign","XK_Control_L","XK_Control_R","XK_CruzeiroSign","XK_D","XK_Dcaron","XK_Delete","XK_DongSign","XK_Down","XK_Dstroke","XK_E","XK_ENG","XK_ETH","XK_EZH","XK_Eacute","XK_Ecaron","XK_EcuSign","XK_Ediaeresis","XK_Emacron","XK_End","XK_Eogonek","XK_Escape","XK_Eth","XK_Etilde","XK_EuroSign","XK_Execute","XK_F","XK_F1","XK_F10","XK_F11","XK_F12","XK_F13","XK_F14","XK_F15","XK_F16","XK_F17","XK_F18","XK_F19","XK_F2","XK_F20","XK_F21","XK_F22","XK_F23","XK_F24","XK_F25","XK_F26","XK_F27","XK_F28","XK_F29","XK_F3","XK_F30","XK_F31","XK_F32","XK_F33","XK_F34","XK_F35","XK_F4","XK_F5","XK_F6","XK_F7","XK_F8","XK_F9","XK_FFrancSign","XK_Find","XK_G","XK_Gbreve","XK_Gcaron","XK_Gcedilla","XK_H","XK_Help","XK_Home","XK_Hstroke","XK_Hyper_L","XK_Hyper_R","XK_I","XK_ISO_Center_Object","XK_ISO_Continuous_Underline","XK_ISO_Discontinuous_Underline","XK_ISO_Emphasize","XK_ISO_Enter","XK_ISO_Left_Tab","XK_ISO_Level2_Latch","XK_ISO_Level3_Latch","XK_ISO_Level3_Lock","XK_ISO_Level3_Shift","XK_ISO_Level5_Latch","XK_ISO_Level5_Lock","XK_ISO_Level5_Shift","XK_ISO_Lock","XK_ISO_Partial_Space_Left","XK_ISO_Partial_Space_Right","XK_ISO_Set_Margin_Left","XK_ISO_Set_Margin_Right","XK_Iacute","XK_Ibreve","XK_Idiaeresis","XK_Imacron","XK_Insert","XK_Iogonek","XK_Itilde","XK_J","XK_K","XK_KP_0","XK_KP_1","XK_KP_2","XK_KP_3","XK_KP_4","XK_KP_5","XK_KP_6","XK_KP_7","XK_KP_8","XK_KP_9","XK_KP_Add","XK_KP_Begin","XK_KP_Decimal","XK_KP_Delete","XK_KP_Divide","XK_KP_Down","XK_KP_End","XK_KP_Enter","XK_KP_Equal","XK_KP_F1","XK_KP_F2","XK_KP_F3","XK_KP_F4","XK_KP_Home","XK_KP_Insert","XK_KP_Left","XK_KP_Multiply","XK_KP_Next","XK_KP_Page_Down","XK_KP_Page_Up","XK_KP_Prior","XK_KP_Right","XK_KP_Separator","XK_KP_Space","XK_KP_Subtract","XK_KP_Tab","XK_KP_Up","XK_Kcedilla","XK_Korean_Won","XK_L","XK_L1","XK_L10","XK_L2","XK_L3","XK_L4","XK_L5","XK_L6","XK_L7","XK_L8","XK_L9","XK_Lacute","XK_Lcaron","XK_Lcedilla","XK_Left","XK_Linefeed","XK_LiraSign","XK_Lstroke","XK_M","XK_Menu","XK_Meta_L","XK_Meta_R","XK_MillSign","XK_Mode_switch","XK_N","XK_Nacute","XK_NairaSign","XK_Ncaron","XK_Ncedilla","XK_NewSheqelSign","XK_Next","XK_Ntilde","XK_Num_Lock","XK_O","XK_OE","XK_Oacute","XK_Obarred","XK_Ocaron","XK_Odiaeresis","XK_Odoubleacute","XK_Omacron","XK_Ooblique","XK_Oslash","XK_Otilde","XK_P","XK_Page_Down","XK_Page_Up","XK_Pause","XK_PesetaSign","XK_Print","XK_Prior","XK_Q","XK_R","XK_R1","XK_R10","XK_R11","XK_R12","XK_R13","XK_R14","XK_R15","XK_R2","XK_R3","XK_R4","XK_R5","XK_R6","XK_R7","XK_R8","XK_R9","XK_Racute","XK_Rcaron","XK_Rcedilla","XK_Redo","XK_Return","XK_Right","XK_RupeeSign","XK_S","XK_SCHWA","XK_Sacute","XK_Scaron","XK_Scedilla","XK_Scroll_Lock","XK_Select","XK_Shift_L","XK_Shift_Lock","XK_Shift_R","XK_Super_L","XK_Super_R","XK_Sys_Req","XK_T","XK_Tab","XK_Tcaron","XK_Tcedilla","XK_Terminate_Server","XK_Tslash","XK_U","XK_Uacute","XK_Ubreve","XK_Udiaeresis","XK_Udoubleacute","XK_Umacron","XK_Undo","XK_Uogonek","XK_Up","XK_Uring","XK_Utilde","XK_V","XK_W","XK_Wacute","XK_Wdiaeresis","XK_WonSign","XK_X","XK_Y","XK_Yacute","XK_Ydiaeresis","XK_Ytilde","XK_Z","XK_Zacute","XK_Zcaron","XK_Zstroke","XK_a","XK_aacute","XK_abreve","XK_abreveacute","XK_abrevetilde","XK_acute","XK_adiaeresis","XK_ae","XK_amacron","XK_ampersand","XK_aogonek","XK_apostrophe","XK_approximate","XK_aring","XK_asciicircum","XK_asciitilde","XK_asterisk","XK_at","XK_atilde","XK_b","XK_backslash","XK_ballotcross","XK_bar","XK_blank","XK_botintegral","XK_botleftparens","XK_botleftsqbracket","XK_botrightparens","XK_botrightsqbracket","XK_bott","XK_braceleft","XK_braceright","XK_bracketleft","XK_bracketright","XK_breve","XK_brokenbar","XK_c","XK_c_h","XK_cacute","XK_careof","XK_caret","XK_caron","XK_ccaron","XK_ccedilla","XK_cedilla","XK_cent","XK_ch","XK_checkerboard","XK_checkmark","XK_club","XK_colon","XK_comma","XK_copyright","XK_cr","XK_crossinglines","XK_currency","XK_cursor","XK_d","XK_dagger","XK_dcaron","XK_decimalpoint","XK_degree","XK_diaeresis","XK_diamond","XK_digitspace","XK_division","XK_dollar","XK_doubbaselinedot","XK_doubleacute","XK_doubledagger","XK_doublelowquotemark","XK_downarrow","XK_downcaret","XK_downshoe","XK_downstile","XK_downtack","XK_dstroke","XK_e","XK_eacute","XK_ecaron","XK_ediaeresis","XK_ellipsis","XK_em3space","XK_em4space","XK_emacron","XK_emdash","XK_emfilledrect","XK_emopenrectangle","XK_emspace","XK_endash","XK_eng","XK_enspace","XK_eogonek","XK_equal","XK_eth","XK_etilde","XK_exclam","XK_exclamdown","XK_ezh","XK_f","XK_femalesymbol","XK_ff","XK_figdash","XK_fiveeighths","XK_fivesixths","XK_fourfifths","XK_function","XK_g","XK_gbreve","XK_gcaron","XK_gcedilla","XK_grave","XK_greater","XK_greaterthanequal","XK_guillemotleft","XK_guillemotright","XK_h","XK_hairspace","XK_heart","XK_hexagram","XK_horizconnector","XK_hstroke","XK_ht","XK_hyphen","XK_i","XK_iacute","XK_ibreve","XK_identical","XK_idiaeresis","XK_idotless","XK_ifonlyif","XK_imacron","XK_implies","XK_includedin","XK_includes","XK_infinity","XK_integral","XK_intersection","XK_iogonek","XK_itilde","XK_j","XK_jot","XK_k","XK_kappa","XK_kcedilla","XK_kra","XK_l","XK_lacute","XK_latincross","XK_lcaron","XK_lcedilla","XK_leftanglebracket","XK_leftarrow","XK_leftcaret","XK_leftdoublequotemark","XK_leftmiddlecurlybrace","XK_leftopentriangle","XK_leftpointer","XK_leftradical","XK_leftshoe","XK_leftsinglequotemark","XK_leftt","XK_lefttack","XK_less","XK_lessthanequal","XK_lf","XK_logicaland","XK_logicalor","XK_lowleftcorner","XK_lowrightcorner","XK_lstroke","XK_m","XK_macron","XK_malesymbol","XK_maltesecross","XK_marker","XK_masculine","XK_minus","XK_minutes","XK_mu","XK_multiply","XK_musicalflat","XK_musicalsharp","XK_n","XK_nabla","XK_nacute","XK_ncaron","XK_ncedilla","XK_nl","XK_nobreakspace","XK_notequal","XK_notsign","XK_ntilde","XK_numbersign","XK_numerosign","XK_o","XK_oacute","XK_obarred","XK_ocaron","XK_odiaeresis","XK_odoubleacute","XK_oe","XK_ogonek","XK_omacron","XK_oneeighth","XK_onefifth","XK_onehalf","XK_onequarter","XK_onesixth","XK_onethird","XK_ooblique","XK_openstar","XK_ordfeminine","XK_oslash","XK_otilde","XK_overbar","XK_overline","XK_p","XK_paragraph","XK_parenleft","XK_parenright","XK_partialderivative","XK_percent","XK_period","XK_periodcentered","XK_permille","XK_phonographcopyright","XK_plus","XK_plusminus","XK_prescription","XK_prolongedsound","XK_punctspace","XK_q","XK_quad","XK_question","XK_questiondown","XK_quotedbl","XK_quoteleft","XK_quoteright","XK_r","XK_racute","XK_radical","XK_rcaron","XK_rcedilla","XK_registered","XK_rightanglebracket","XK_rightarrow","XK_rightcaret","XK_rightdoublequotemark","XK_rightmiddlecurlybrace","XK_rightopentriangle","XK_rightpointer","XK_rightshoe","XK_rightsinglequotemark","XK_rightt","XK_righttack","XK_s","XK_sacute","XK_scaron","XK_scedilla","XK_schwa","XK_script_switch","XK_seconds","XK_section","XK_semicolon","XK_semivoicedsound","XK_seveneighths","XK_signaturemark","XK_signifblank","XK_similarequal","XK_singlelowquotemark","XK_slash","XK_soliddiamond","XK_space","XK_ssharp","XK_sterling","XK_t","XK_tcaron","XK_tcedilla","XK_telephone","XK_telephonerecorder","XK_therefore","XK_thinspace","XK_threeeighths","XK_threefifths","XK_threequarters","XK_topintegral","XK_topleftparens","XK_topleftradical","XK_topleftsqbracket","XK_toprightparens","XK_toprightsqbracket","XK_topt","XK_trademark","XK_tslash","XK_twofifths","XK_twothirds","XK_u","XK_uacute","XK_ubreve","XK_udiaeresis","XK_udoubleacute","XK_umacron","XK_underbar","XK_underscore","XK_union","XK_uogonek","XK_uparrow","XK_upcaret","XK_upleftcorner","XK_uprightcorner","XK_upshoe","XK_upstile","XK_uptack","XK_uring","XK_utilde","XK_v","XK_variation","XK_vertbar","XK_vertconnector","XK_voicedsound","XK_vt","XK_w","XK_wacute","XK_wdiaeresis","XK_x","XK_y","XK_yacute","XK_ydiaeresis","XK_yen","XK_ytilde","XK_z","XK_zacute","XK_zcaron","XK_zstroke","X keysym mappings: auto generated from X11/keysymdef.h","An iterator over the variants of Self","","Convert this keysym to its utf8 representation if possible","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,6,1,6,1,6,1,6,1,1,1,6,1,1,1,6,6,1,6,6,6,6,6,1,6,1,1,6,1,6,1,6],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,[[5,[3,4]]]],[[]],[[]],[[]],[[]],[1,1],[6,6],[[]],[[]],[[1,1],7],[[1,8],9],[[]],[[]],[2,[[5,[1]]]],[1],[[]],[[]],[[]],[[],6],[6,10],[6,11],[6,11],[[6,10],11],[6],[[]],[[]],[2,[[5,[1]]]],[[],5],[[],5],[[],5],[[],5],[[],12],[[],12]],"p":[[4,"XKeySym"],[15,"str"],[3,"String"],[3,"FromUtf8Error"],[4,"Result"],[3,"XKeySymIter"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"usize"],[4,"Option"],[3,"TypeId"]]},\
"penrose_ui":{"doc":"","t":[13,2,2,4,13,13,13,2,6,2,2,13,13,13,0,11,11,0,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,12,12,12,12,13,4,3,13,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,5,11,5,5,11,11,11,11,11,11,11,11,0,3,3,3,3,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,0,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Cairo","Context","Draw","Error","InvalidHexColor","ParseInt","Penrose","Position","Result","StatusBar","TextStyle","UnableToCreateLayout","UnintialisedSurface","UnknownFont","bar","borrow","borrow_mut","core","fmt","fmt","from","from","from","from","into","source","status_bar","to_string","try_from","try_into","type_id","0","0","0","code","font","id","Bottom","Position","StatusBar","Top","add_to","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","event_hook","fmt","fmt","from","from","hash","into","into","manage_hook","redraw","refresh_hook","startup_hook","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","widgets","ActiveWindowName","CurrentLayout","RootWindowName","Text","Widget","Workspaces","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","current_extent","current_extent","current_extent","current_extent","current_extent","current_extent","debug","draw","draw","draw","draw","draw","draw","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_text","get_text_mut","into","into","into","into","into","is_greedy","is_greedy","is_greedy","is_greedy","is_greedy","is_greedy","ne","ne","ne","ne","ne","new","new","new","new","new","on_event","on_event","on_event","on_new_client","on_refresh","on_refresh","on_refresh","on_refresh","on_startup","on_startup","require_draw","require_draw","require_draw","require_draw","require_draw","require_draw","set_text","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ActiveWindowId","StateSummary","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","current_extent","current_extent","draw","draw","eq","eq","fmt","fmt","from","from","into","into","is_greedy","is_greedy","ne","ne","new","new","on_refresh","on_refresh","require_draw","require_draw","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Context","Draw","TextStyle","bg","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","color","conn","context_for","eq","fg","flush","flush","fmt","fmt","fmt","font","font","from","from","from","into","into","into","ne","new","new_window","padding","point_size","rectangle","register_font","set_x_offset","set_y_offset","temp_context","text","text_extent","to_owned","to_owned","translate","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["penrose_ui","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose_ui::Error","","","","","","penrose_ui::bar","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose_ui::bar::widgets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose_ui::bar::widgets::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","penrose_ui::core","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","A lightweight and configurable status bar for penrose","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","Create a default dwm style status bar that displays â€¦","","","","","","","","","","","Bottom of the screen","The position of a status bar","","Top of the screen","","","","","","","","","Run any widget event actions and then redraw if needed","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Run any widget on_new_client actions and then redraw if â€¦","Re-render all widgets in this status bar","Run any widget refresh actions and then redraw if needed","Run any widget startup actions and then redraw","","","","","","Try to initialise a new empty status bar. Can fail if we â€¦","","","Self rendering building blocks for text based UI elements","A text widget that shows the name of the currently focused â€¦","A text widget that shows the current layout name","A text widget that is set via updating the root window â€¦","A simple piece of static text with an optional background â€¦","A status bar widget that can be rendered using a [â€¦","A simple workspace indicator for a status bar","","","","","","","","","","","","","","","","","","","","","Current required width and height for this widget due to â€¦","","","","","","Widgets for showing debug information about the current â€¦","Render the current state of the widget to the status bar â€¦","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Borrow the current contents of the widget.","Mutably borrow the current contents of the widget.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","If true, this widget will expand to fill remaining â€¦","","","","","","","","","","","Create a new RootWindowName widget","Create a new ActiveWindowName widget with a maximum â€¦","Create a new CurrentLayout widget","Construct a new WorkspaceWidget","Construct a new Text","An event hook to be run in order to update this Widget","","","A manage hook to be run in order to update this Widget","A refresh hook to be run in order to update this Widget","","","","A startup hook to be run in order to initialise this Widget","","Does this widget currently require re-rendering? (should â€¦","","","","","","Set the rendered text and trigger a redraw","","","","","","","","","","","","","","","","","","","","","A text widget that shows the Xid of the current client","A text widget that shows a summary of the current Window â€¦","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Create a new ActiveWindowId widget.","Create a new StateSummary widget.","","","","","","","","","","","","","","","A set of styling options for a text string","Optional background color in 0xRRGGBB format (default to â€¦","","","","","","","","","","","","","","","","Foreground color in 0xRRGGBB format","","","","","","","Font name to use for rendering","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Pixel padding around this piece of text","Point size to render the font at","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,44,45,46,47,48,49,13,0,0,13,15,15,13,15,13,13,13,13,0,15,13,15,13,13,15,13,0,15,0,0,13,15,13,15,13,15,15,13,0,0,0,0,0,0,0,29,30,31,32,33,29,30,31,32,33,29,30,31,32,33,29,30,31,32,33,26,29,30,31,32,33,0,26,29,30,31,32,33,29,30,31,32,33,29,30,31,32,33,29,30,31,32,33,33,33,29,30,31,32,33,26,29,30,31,32,33,29,30,31,32,33,29,30,31,32,33,26,29,30,26,26,30,31,32,26,32,26,29,30,31,32,33,33,29,30,31,32,33,29,30,31,32,33,29,30,31,32,33,29,30,31,32,33,0,0,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,37,38,0,0,0,10,10,39,34,10,39,34,34,10,34,10,34,34,39,39,10,10,39,34,10,39,34,34,10,10,39,34,10,39,34,10,39,39,10,10,34,39,34,34,39,34,34,10,34,34,10,39,34,10,39,34,10,39,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[1,2],3],[[1,2],3],[[]],[4,1],[5,1],[6,1],[[]],[1,[[8,[7]]]],[[9,10,[12,[11]],[12,[11]],13],[[16,[[15,[14]]]]]],[[],17],[[],18],[[],18],[[],19],0,0,0,0,0,0,0,0,0,0,[[[15,[14]],[20,[14]]],[[20,[14]]]],[[]],[[]],[[]],[[]],[13,13],[[]],[[13,13],21],[[22,23],[[24,[21]]]],[[[15,[14]],2],3],[[13,2],3],[[]],[[]],[13],[[]],[[]],[[25,23],24],[[[15,[14]]],16],[23,24],[23,24],[[]],[[],18],[[],18],[[],18],[[],18],[[13,9,[12,[11]],[28,[[27,[26]]]]],[[16,[[15,[14]]]]]],[[],19],[[],19],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[29,29],[30,30],[31,31],[32,32],[33,33],[[]],[[]],[[]],[[]],[[]],[[34,35],16],[[29,34,35],16],[[30,34,35],16],[[31,34,35],16],[[32,34,35],16],[[33,34,35],16],0,[[34,36,21,35,35],16],[[29,34,36,21,35,35],16],[[30,34,36,21,35,35],16],[[31,34,36,21,35,35],16],[[32,34,36,21,35,35],16],[[33,34,36,21,35,35],16],[[29,29],21],[[30,30],21],[[31,31],21],[[32,32],21],[[33,33],21],[[29,2],3],[[30,2],3],[[31,2],3],[[32,2],3],[[33,2],3],[[]],[[]],[[]],[[]],[[]],[33,17],[33,17],[[]],[[]],[[]],[[]],[[]],[[],21],[29,21],[30,21],[31,21],[32,21],[33,21],[[29,29],21],[[30,30],21],[[31,31],21],[[32,32],21],[[33,33],21],[[10,21,21],29],[[36,10,21,21],30],[10,31],[[10,[12,[11]],[12,[11]]],32],[[[12,[17]],10,21,21],33],[[22,23],16],[[29,22,23],16],[[30,22,23],16],[[25,23],16],[23,16],[[30,23],16],[[31,23],16],[[32,23],16],[23,16],[[32,23],16],[[],21],[29,21],[30,21],[31,21],[32,21],[33,21],[[33,[12,[17]]]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,[[]],[[]],[[]],[[]],[37,37],[38,38],[[]],[[]],[[37,34,35],16],[[38,34,35],16],[[37,34,36,21,35,35],16],[[38,34,36,21,35,35],16],[[37,37],21],[[38,38],21],[[37,2],3],[[38,2],3],[[]],[[]],[[]],[[]],[37,21],[38,21],[[37,37],21],[[38,38],21],[[10,21,21],37],[10,38],[[37,23],16],[[38,23],16],[37,21],[38,21],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[34,16],[10,10],[34,34],[[]],[[]],[[34,11]],0,[[39,25],[[16,[34]]]],[[10,10],21],0,[[39,25],16],[34],[[10,2],3],[[39,2],3],[[34,2],3],[[34,40,41],16],0,[[]],[[]],[[]],[[]],[[]],[[]],[[10,10],21],[[],[[16,[39]]]],[[39,42,43,21],[[16,[25]]]],0,0,[[34,35,35,35,35],16],[[39,40]],[[34,35]],[[34,35]],[[39,41,41],[[16,[34]]]],[[34,40,35],16],[[34,40],16],[[]],[[]],[[34,35,35]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19]],"p":[[4,"Error"],[3,"Formatter"],[6,"Result"],[4,"Error"],[3,"ParseIntError"],[4,"Error"],[8,"Error"],[4,"Option"],[15,"u32"],[3,"TextStyle"],[3,"Color"],[8,"Into"],[4,"Position"],[8,"XConn"],[3,"StatusBar"],[6,"Result"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"WindowManager"],[15,"bool"],[4,"XEvent"],[3,"State"],[6,"Result"],[3,"Xid"],[8,"Widget"],[3,"Box"],[3,"Vec"],[3,"RootWindowName"],[3,"ActiveWindowName"],[3,"CurrentLayout"],[3,"Workspaces"],[3,"Text"],[3,"Context"],[15,"f64"],[15,"usize"],[3,"ActiveWindowId"],[3,"StateSummary"],[3,"Draw"],[15,"str"],[15,"i32"],[4,"WinType"],[3,"Rect"],[13,"Cairo"],[13,"ParseInt"],[13,"Penrose"],[13,"InvalidHexColor"],[13,"UnknownFont"],[13,"UnintialisedSurface"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
